{u'source_code/test1618.sol': {u'FountainTokenUpgrade': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test1618.sol:307:2: Warning: Integer Overflow.\n\tmapping(address => mapping(uint => LockBin)) public lockbins', u'source_code/test1618.sol:577:2: Warning: Integer Overflow.\n\tfunction batchTransferFrom (address from, address[] receivers, uint256 amount) public whenRunning returns (bool) {\r\n\t^\nSpanning multiple lines.', u'source_code/test1618.sol:502:2: Warning: Integer Overflow.\n\tfunction batchTransfer (address[] receivers, uint256 amount) public whenRunning returns (bool) {\r\n\t^\nSpanning multiple lines.', u'source_code/test1618.sol:612:2: Warning: Integer Overflow.\n\tfunction batchTransferFroms (address from, address[] receivers, uint256[] amounts) public whenRunning returns (bool) {\r\n\t^\nSpanning multiple lines.', u'source_code/test1618.sol:529:2: Warning: Integer Overflow.\n\tfunction batchTransfers (address[] receivers, uint256[] amounts) public whenRunning returns (bool) {\r\n\t^\nSpanning multiple lines.', u'source_code/test1618.sol:410:2: Warning: Integer Overflow.\n\tfunction batchInvests (address[] investors, uint256[] amounts) public onlyOwner whenRunning canInvest returns (bool) {\r\n\t^\nSpanning multiple lines.', u'source_code/test1618.sol:765:2: Warning: Integer Overflow.\n\tfunction batchSetRefund(address[] addrs, uint[] amounts) public whenUpgrading canUpgrade onlyOwner {\r\n\t^\nSpanning multiple lines.', u'source_code/test1618.sol:791:2: Warning: Integer Overflow.\n\tfunction batchRunRefund(address[] addrs) public whenUpgrading canUpgrade onlyOwner {\r\n\t^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    addrs = 115792089237316195423570985008687907853269984665640564039457584007913129639935'], 'parity_multisig_bug_2': [], 'integer_underflow': [u'source_code/test1618.sol:105:13: Warning: Integer Underflow.\n\t\tpauseTo = now - 1\nInteger Underflow occurs if:\n    owner = 0', u'source_code/test1618.sol:91:15: Warning: Integer Underflow.\n\t\tpauseFrom = now - 1\nInteger Underflow occurs if:\n    owner = 0', u'source_code/test1618.sol:104:15: Warning: Integer Underflow.\n\t\tpauseFrom = now - 2\nInteger Underflow occurs if:\n    owner = 0'], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '37.8'}, u'FountainToken': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test1618.sol:307:2: Warning: Integer Overflow.\n\tmapping(address => mapping(uint => LockBin)) public lockbins', u'source_code/test1618.sol:577:2: Warning: Integer Overflow.\n\tfunction batchTransferFrom (address from, address[] receivers, uint256 amount) public whenRunning returns (bool) {\r\n\t^\nSpanning multiple lines.', u'source_code/test1618.sol:502:2: Warning: Integer Overflow.\n\tfunction batchTransfer (address[] receivers, uint256 amount) public whenRunning returns (bool) {\r\n\t^\nSpanning multiple lines.', u'source_code/test1618.sol:368:2: Warning: Integer Overflow.\n\tfunction batchInvest (address[] investors, uint256 amount) public onlyOwner whenRunning canInvest returns (bool) {\r\n\t^\nSpanning multiple lines.', u'source_code/test1618.sol:612:2: Warning: Integer Overflow.\n\tfunction batchTransferFroms (address from, address[] receivers, uint256[] amounts) public whenRunning returns (bool) {\r\n\t^\nSpanning multiple lines.', u'source_code/test1618.sol:458:12: Warning: Integer Overflow.\n\t\tuint l = locks[0].amount\nInteger Overflow occurs if:\n    foundationOwner = 0\n    owner = 0', u'source_code/test1618.sol:529:2: Warning: Integer Overflow.\n\tfunction batchTransfers (address[] receivers, uint256[] amounts) public whenRunning returns (bool) {\r\n\t^\nSpanning multiple lines.', u'source_code/test1618.sol:410:2: Warning: Integer Overflow.\n\tfunction batchInvests (address[] investors, uint256[] amounts) public onlyOwner whenRunning canInvest returns (bool) {\r\n\t^\nSpanning multiple lines.'], 'parity_multisig_bug_2': [], 'integer_underflow': [u'source_code/test1618.sol:105:13: Warning: Integer Underflow.\n\t\tpauseTo = now - 1\nInteger Underflow occurs if:\n    owner = 0', u'source_code/test1618.sol:91:15: Warning: Integer Underflow.\n\t\tpauseFrom = now - 1\nInteger Underflow occurs if:\n    owner = 0', u'source_code/test1618.sol:104:15: Warning: Integer Underflow.\n\t\tpauseFrom = now - 2\nInteger Underflow occurs if:\n    owner = 0'], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '49.6'}, u'SafeMath': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '100.0'}}}

