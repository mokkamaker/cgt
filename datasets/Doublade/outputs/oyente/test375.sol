{u'source_code/test375.sol': {u'Ownable': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '99.5'}, u'Destructible': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '98.9'}, u'Bondage': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test375.sol:407:5: Warning: Integer Overflow.\n    function getEndpointBroker(address oracleAddress, bytes32 endpoint) public view returns (address) {\r\n    ^\nSpanning multiple lines.', u'source_code/test375.sol:431:5: Warning: Integer Overflow.\n    function getOracleAddress(address holderAddress, uint256 index) public view returns (address) {\r\n    ^\nSpanning multiple lines.', u'source_code/test375.sol:415:5: Warning: Integer Overflow.\n    function getNumZap(address oracleAddress, bytes32 endpoint) public view returns (uint256) {\r\n    ^\nSpanning multiple lines.', u"source_code/test375.sol:420:39: Warning: Integer Overflow.\n        return db.getNumber(keccak256(abi.encodePacked('totalIssued', oracleAddress, endpoint)", u'source_code/test375.sol:290:16: Warning: Integer Overflow.\n        return currentCost._costOfNDots(oracleAddress, endpoint, issued + 1, numDots - 1)', u'source_code/test375.sol:378:13: Warning: Integer Overflow.\n            require(msg.sender == broker, "Error: Only the broker has access to this function")', u"source_code/test375.sol:412:16: Warning: Integer Overflow.\n        return db.getNumber(keccak256(abi.encodePacked('escrow', holderAddress, oracleAddress, endpoint)))\nInteger Overflow occurs if:\n    dispatchAddress = 0\n    arbiterAddress = 1461501637330902918203684832716283019655932542975", u'source_code/test375.sol:248:9: Warning: Integer Overflow.\n        require(numDots <= numEscrowed, "Error: Not enough dots Escrowed")\nInteger Overflow occurs if:\n    numDots = 1\n    dispatchAddress = 0\n    arbiterAddress = 1461501637330902918203684832716283019655932542975', u"source_code/test375.sol:424:39: Warning: Integer Overflow.\n        return db.getNumber(keccak256(abi.encodePacked('holders', holderAddress, 'bonds', oracleAddress, endpoint)", u"source_code/test375.sol:432:16: Warning: Integer Overflow.\n        return db.getAddressArrayIndex(keccak256(abi.encodePacked('holders', holderAddress, 'oracleList')), index)", u"source_code/test375.sol:445:52: Warning: Integer Overflow.\n        uint256 newEscrow = db.getNumber(keccak256(abi.encodePacked('escrow', holderAddress, oracleAddress, endpoint)\nInteger Overflow occurs if:\n    numDots = 0\n    dispatchAddress = 0\n    arbiterAddress = 1461501637330902918203684832716283019655932542975", u"source_code/test375.sol:408:24: Warning: Integer Overflow.\n        return address(db.getBytes32(keccak256(abi.encodePacked('oracles', oracleAddress, endpoint, 'broker')))", u"source_code/test375.sol:428:16: Warning: Integer Overflow.\n        return db.getAddressArrayLength(keccak256(abi.encodePacked('holders', holderAddress, 'oracleList')))", u"source_code/test375.sol:416:16: Warning: Integer Overflow.\n        return db.getNumber(keccak256(abi.encodePacked('totalBound', oracleAddress, endpoint)))", u'source_code/test375.sol:423:5: Warning: Integer Overflow.\n    function getBoundDots(address holderAddress, address oracleAddress, bytes32 endpoint) public view returns (uint256) {\r\n    ^\nSpanning multiple lines.', u"source_code/test375.sol:424:16: Warning: Integer Overflow.\n        return db.getNumber(keccak256(abi.encodePacked('holders', holderAddress, 'bonds', oracleAddress, endpoint)))", u'source_code/test375.sol:270:9: Warning: Integer Overflow.\n        require(numDots <= numEscrowed, "Error: Not enough dots escrowed")\nInteger Overflow occurs if:\n    numDots = 1\n    arbiterAddress = 0', u'source_code/test375.sol:427:5: Warning: Integer Overflow.\n    function getIndexSize(address holderAddress) external view returns (uint256) {\r\n    ^\nSpanning multiple lines.', u'source_code/test375.sol:280:5: Warning: Integer Overflow.\n    function calcZapForDots(\r\n    ^\nSpanning multiple lines.', u'source_code/test375.sol:342:13: Warning: Integer Overflow.\n            require(msg.sender == broker, "Error: Only the broker has access to this function")'], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '54.7'}}}

