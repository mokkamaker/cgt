{u'source_code/test3351.sol': {u'Lescovex_ISC': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test3351.sol:127:17: Warning: Integer Overflow.\n            if (holded[_owner].time\nInteger Overflow occurs if:\n    holded[_owner].length = 115792089183396302089269705419353877679230723318366275194376439045705909141503\n    holdTime = 0', u'source_code/test3351.sol:44:21: Warning: Integer Overflow.\n        uint256 c = a + b\nInteger Overflow occurs if:\n    allowed[msg.sender][_spender] = 1', u'source_code/test3351.sol:120:12: Warning: Integer Overflow.\n        || holded[_owner].time\nInteger Overflow occurs if:\n    holded[_owner].length = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test3351.sol:118:29: Warning: Integer Overflow.\n        uint256 iNotValid = holded[_owner].length', u'source_code/test3351.sol:238:1: Warning: Integer Overflow.\ncontract Lescovex_ISC is LescovexERC20 {\r\n^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    allowed[_from][msg.sender] = 0\n    balances[_from] = 0', u'source_code/test3351.sol:222:5: Warning: Integer Overflow.\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) public returns (bool success) {\r\n    ^\nSpanning multiple lines.'], 'parity_multisig_bug_2': [], 'integer_underflow': [u'source_code/test3351.sol:114:32: Warning: Integer Underflow.\n        uint256 requiredTime = block.timestamp - holdTime\nInteger Underflow occurs if:\n    holdTime = 1', u'source_code/test3351.sol:100:5: Warning: Integer Underflow.\n    string public name', u'source_code/test3351.sol:101:5: Warning: Integer Underflow.\n    string public symbol'], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '67.2'}, u'SafeMath': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '100.0'}, u'LescovexERC20': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test3351.sol:127:17: Warning: Integer Overflow.\n            if (holded[_owner].time\nInteger Overflow occurs if:\n    holded[_owner].length = 115792089183396302089269705419353877679230723318366275194376439045705909141503\n    holdTime = 0', u'source_code/test3351.sol:44:21: Warning: Integer Overflow.\n        uint256 c = a + b\nInteger Overflow occurs if:\n    allowed[msg.sender][_spender] = 1\n    _addedValue = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test3351.sol:120:12: Warning: Integer Overflow.\n        || holded[_owner].time\nInteger Overflow occurs if:\n    holded[_owner].length = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test3351.sol:118:29: Warning: Integer Overflow.\n        uint256 iNotValid = holded[_owner].length', u'source_code/test3351.sol:79:1: Warning: Integer Overflow.\ncontract LescovexERC20 is Ownable {\r\n^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    allowed[_from][msg.sender] = 0\n    balances[_from] = 0', u'source_code/test3351.sol:222:5: Warning: Integer Overflow.\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) public returns (bool success) {\r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    _extraData = 115792089237316195423570985008687907853269984665640564039457584007913129639935'], 'parity_multisig_bug_2': [], 'integer_underflow': [u'source_code/test3351.sol:114:32: Warning: Integer Underflow.\n        uint256 requiredTime = block.timestamp - holdTime\nInteger Underflow occurs if:\n    holdTime = 1', u'source_code/test3351.sol:100:5: Warning: Integer Underflow.\n    string public name', u'source_code/test3351.sol:101:5: Warning: Integer Underflow.\n    string public symbol'], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '67.1'}}}

