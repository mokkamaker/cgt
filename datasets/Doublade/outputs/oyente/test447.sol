{u'source_code/test447.sol': {u'ShareHolder': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test447.sol:6:2: Warning: Integer Overflow.\n\tfunction addToShareHoldersProfit(string, string) payable\r\n\t^\nSpanning multiple lines.'], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '34.7'}, u'DukeOfEther': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test447.sol:136:2: Warning: Integer Overflow.\n\tfunction addRemoveCountry(string strCountry, string strNickName, bool bDestroy) payable\r\n\t^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    strCountry = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test447.sol:252:2: Warning: Integer Overflow.\n\tfunction getCurrentDuke(string strCountry) constant returns (address addr) \r\n\t^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    strCountry = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test447.sol:254:2: Warning: Integer Overflow.\n\tfunction getCurrentDukePaid(string strCountry) constant returns (uint nPaid) \r\n\t^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    strCountry = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test447.sol:193:2: Warning: Integer Overflow.\n\tfunction becomeDuke(string strCountry, string strNickName) payable\r\n\t^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    strCountry = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test447.sol:246:2: Warning: Integer Overflow.\n\tfunction isDestroyed(string strCountry) constant returns (bool) { return m_Countries[strCountry].m_bIsDestroyed; }\nInteger Overflow occurs if:\n    strCountry = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test447.sol:248:2: Warning: Integer Overflow.\n\tfunction getDukeNickName(string strCountry) constant returns (string) \r\n\t^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    strCountry = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test447.sol:256:2: Warning: Integer Overflow.\n\tfunction getMinNextBet(string strCountry) constant returns (uint nNextBet) \r\n\t^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    strCountry = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test447.sol:273:2: Warning: Integer Overflow.\n\tfunction getPaymentToAddRemoveCountry(string strCountry, bool bRemove) constant returns (uint)\r\n\t^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    strCountry = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test447.sol:250:2: Warning: Integer Overflow.\n\tfunction getDukeDate(string strCountry) constant returns (uint date) \r\n\t^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    strCountry = 115792089237316195423570985008687907853269984665640564039457584007913129639935'], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '14.8'}, u'Ownable': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '99.4'}}}

