{u'source_code/test3268.sol': {u'usingOraclize': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '100.0'}, u'coinback': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test3268.sol:338:5: Warning: Integer Overflow.\n    function __callback(bytes32 myid, string result) {\r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    result = 115792089237316195423570985008687907853269984665640564039457584007913129639935'], 'parity_multisig_bug_2': [], 'integer_underflow': [u'source_code/test3268.sol:324:28: Warning: Integer Underflow.\n                betValue = betValue - overValue\nInteger Underflow occurs if:\n    POOL_AWARD = 115792089237316195423570985008687907853269984665640564039457584007913129639903\n    stopContract = 0', u'source_code/test3268.sol:321:30: Warning: Integer Underflow.\n            uint overValue = address(this).balance - POOL_AWARD\nInteger Underflow occurs if:\n    POOL_AWARD = 115792089237314549919013663802645752884087427315135581303591950428049781030911\n    stopContract = 0'], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '48.8'}}}

