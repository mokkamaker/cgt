{u'source_code/test901.sol': {u'MiniMeToken': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test901.sol:599:5: Warning: Integer Overflow.\n    function createCloneToken(\r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    _cloneTokenName = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test901.sol:509:5: Warning: Integer Overflow.\n    function approveAndCall(address _spender, uint256 _amount, bytes _extraData\r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    _extraData = 115792089237316195423570985008687907853269984665640564039457584007913129639935'], 'parity_multisig_bug_2': [], 'integer_underflow': [u'source_code/test901.sol:295:5: Warning: Integer Underflow.\n    string public name', u"source_code/test901.sol:298:5: Warning: Integer Underflow.\n    string public version = 'MMT_0.2'", u'source_code/test901.sol:297:5: Warning: Integer Underflow.\n    string public symbol'], 'money_concurrency': [[u'source_code/test901.sol:741:17: Warning: Transaction-Ordering Dependency.\n        require(TokenController(controller).proxyPayment.value(msg.value)(msg.sender)'], [u'source_code/test901.sol:754:13: Warning: Transaction-Ordering Dependency.\n            controller.transfer(this.balance)']], 'assertion_failure': []}, 'evm_code_coverage': '57.5'}, u'MiniMeTokenFactory': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test901.sol:798:5: Warning: Integer Overflow.\n    function createCloneToken(\r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    _tokenName = 115792089237316195423570985008687907853269984665640564039457584007913129639932'], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '1.3'}, u'Controlled': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '99.4'}, u'KlerosLiquid': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '0/0'}, u'SortitionSumTreeFactory': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test901.sol:1018:34: Warning: Integer Overflow.\n            } else if (_value != tree.nodes\nInteger Overflow occurs if:\n    _value = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test901.sol:969:26: Warning: Integer Overflow.\n        uint treeIndex = tree.IDsToNodeIndexes', u'source_code/test901.sol:1049:30: Warning: Integer Overflow.\n        for (uint i = 0; i < tree.nodes', u'source_code/test901.sol:1050:37: Warning: Integer Overflow.\n            if ((tree.K * i) + 1 >= tree.nodes', u'source_code/test901.sol:978:21: Warning: Integer Overflow.\n                    tree.nodes\nInteger Overflow occurs if:\n    _value = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test901.sol:1058:75: Warning: Integer Overflow.\n        values = new uint[](loopStartIndex + _count > tree.nodes.length ? tree.nodes\nInteger Overflow occurs if:\n    _cursor = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    _count = 0', u'source_code/test901.sol:1083:50: Warning: Integer Overflow.\n        uint currentDrawnNumber = _drawnNumber % tree.nodes', u'source_code/test901.sol:955:9: Warning: Integer Overflow.\n        tree.nodes\nInteger Overflow occurs if:\n    _K = 115792089237316195423570985008687907853269984665640564039457584007913129639934', u'source_code/test901.sol:953:9: Warning: Integer Overflow.\n        tree.stack\nInteger Overflow occurs if:\n    _K = 115792089237316195423570985008687907853269984665640564039457584007913129639934', u'source_code/test901.sol:1088:34: Warning: Integer Overflow.\n                uint nodeValue = tree.nodes', u'source_code/test901.sol:954:9: Warning: Integer Overflow.\n        tree.nodes\nInteger Overflow occurs if:\n    _K = 115792089237316195423570985008687907853269984665640564039457584007913129639934', u'source_code/test901.sol:1007:30: Warning: Integer Overflow.\n                uint value = tree.nodes\nInteger Overflow occurs if:\n    _value = 0', u'source_code/test901.sol:1058:29: Warning: Integer Overflow.\n        values = new uint[](loopStartIndex + _count\nInteger Overflow occurs if:\n    _cursor = 1\n    _count = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test901.sol:1110:22: Warning: Integer Overflow.\n        else value = tree.nodes', u'source_code/test901.sol:992:44: Warning: Integer Overflow.\n                    treeIndex = tree.stack[tree.stack\nInteger Overflow occurs if:\n    _value = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test901.sol:922:1: Warning: Integer Overflow.\nlibrary SortitionSumTreeFactory {\r\n^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    _K = 115792089237316195423570985008687907853269984665640564039457584007913129639934', u'source_code/test901.sol:1097:14: Warning: Integer Overflow.\n        ID = tree.nodeIndexesToIDs', u'source_code/test901.sol:1085:43: Warning: Integer Overflow.\n        while ((tree.K * treeIndex) + 1 < tree.nodes', u'source_code/test901.sol:992:33: Warning: Integer Overflow.\n                    treeIndex = tree.stack\nInteger Overflow occurs if:\n    _value = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test901.sol:1107:26: Warning: Integer Overflow.\n        uint treeIndex = tree.IDsToNodeIndexes', u'source_code/test901.sol:1058:55: Warning: Integer Overflow.\n        values = new uint[](loopStartIndex + _count > tree.nodes', u'source_code/test901.sol:977:33: Warning: Integer Overflow.\n                    treeIndex = tree.nodes\nInteger Overflow occurs if:\n    _value = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test901.sol:975:21: Warning: Integer Overflow.\n                if (tree.stack\nInteger Overflow occurs if:\n    _value = 115792089237316195423570985008687907853269984665640564039457584007913129639935'], 'parity_multisig_bug_2': [], 'integer_underflow': [u'source_code/test901.sol:1058:75: Warning: Integer Underflow.\n        values = new uint[](loopStartIndex + _count > tree.nodes.length ? tree.nodes.length - loopStartIndex\nInteger Underflow occurs if:\n    _cursor = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    _count = 0'], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '54.7'}, u'BlockHashRNG': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test901.sol:1162:55: Warning: Integer Overflow.\n    function contribute(uint _block) public payable { reward[_block] += msg.value\nInteger Overflow occurs if:\n    reward[_block] = 1'], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [[u'source_code/test901.sol:1191:13: Warning: Transaction-Ordering Dependency.\n            msg.sender.send(rewardToSend)'], [u'source_code/test901.sol:1191:13: Warning: Transaction-Ordering Dependency.\n            msg.sender.send(rewardToSend)']], 'assertion_failure': []}, 'evm_code_coverage': '99.9'}, u'Pinakion': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test901.sol:599:5: Warning: Integer Overflow.\n    function createCloneToken(\r\n    ^\nSpanning multiple lines.', u'source_code/test901.sol:509:5: Warning: Integer Overflow.\n    function approveAndCall(address _spender, uint256 _amount, bytes _extraData\r\n    ^\nSpanning multiple lines.'], 'parity_multisig_bug_2': [], 'integer_underflow': [u'source_code/test901.sol:295:5: Warning: Integer Underflow.\n    string public name', u"source_code/test901.sol:298:5: Warning: Integer Underflow.\n    string public version = 'MMT_0.2'", u'source_code/test901.sol:297:5: Warning: Integer Underflow.\n    string public symbol'], 'money_concurrency': [[u'source_code/test901.sol:741:17: Warning: Transaction-Ordering Dependency.\n        require(TokenController(controller).proxyPayment.value(msg.value)(msg.sender)'], [u'source_code/test901.sol:754:13: Warning: Transaction-Ordering Dependency.\n            controller.transfer(this.balance)']], 'assertion_failure': []}, 'evm_code_coverage': '57.0'}}}

