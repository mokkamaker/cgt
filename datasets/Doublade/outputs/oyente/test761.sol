{u'source_code/test761.sol': {u'CommonEth': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '99.7'}, u'ERC721Token': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '60.5'}, u'SafeMath': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '100.0'}, u'NFToken': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test761.sol:493:5: Warning: Integer Overflow.\n    function updateUnsold(string serial, uint _price, uint _openTime) public onlyCOO returns (bool){\r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    serial = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test761.sol:487:5: Warning: Integer Overflow.\n    function createByCOO(string serial, uint price, uint openTime) public onlyCOO returns (uint){\r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    serial = 115792089237316195423570985008687907853269984665640564039457584007913129639935'], 'parity_multisig_bug_2': [], 'integer_underflow': [u'source_code/test761.sol:518:9: Warning: Integer Underflow.\n        return (tokens[_id].id, tokens[_id].serial, tokens[_id].createTime, tokens[_id].price, tokens[_id].lastTime, tokens[_id].openTime, ownerOf(_id))\nInteger Underflow occurs if:\n    tokenOwner[_tokenId] = 1461501637330902918203684832716283019655932542975'], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '47.7'}}}

