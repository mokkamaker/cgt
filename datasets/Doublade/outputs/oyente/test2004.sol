{u'source_code/test2004.sol': {u'CERB_Coin': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test2004.sol:234:3: Warning: Integer Overflow.\n  function approveAndCall(address _spender, uint256 _value, bytes _extraData) public returns (bool success)\r\n  ^\nSpanning multiple lines.'], 'parity_multisig_bug_2': [], 'integer_underflow': [u'source_code/test2004.sol:247:11: Warning: Integer Underflow.\n          totalSupply -= _value\nInteger Underflow occurs if:\n    totalSupply = 115792089237316195423570985008687907853269984665640564039457575000713874898942\n    balanceOf[msg.sender] = 115792089237316195423570985008687907853269984665640564039457575000713874898944', u'source_code/test2004.sol:6:5: Warning: Integer Underflow.\n    string  public name', u'source_code/test2004.sol:258:11: Warning: Integer Underflow.\n          totalSupply -= _value\nInteger Underflow occurs if:\n    totalSupply = 115792089237316195423570985008687907853269984665640564039457584007913129639934\n    allowance[_from][msg.sender] = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    balanceOf[_from] = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test2004.sol:7:5: Warning: Integer Underflow.\n    string  public symbol'], 'money_concurrency': [[u'source_code/test2004.sol:126:17: Warning: Transaction-Ordering Dependency.\n                benAddress.transfer(amountWith)'], [u'source_code/test2004.sol:139:17: Warning: Transaction-Ordering Dependency.\n                benAddress.transfer(amountWith)']], 'assertion_failure': []}, 'evm_code_coverage': '79.5'}}}

