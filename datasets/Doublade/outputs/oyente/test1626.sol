{u'source_code/test1626.sol': {u'Authorizable': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test1626.sol:100:5: Warning: Integer Overflow.\n    authorizers.length++\nInteger Overflow occurs if:\n    authorizers.length = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    authorizerIndex[_addr] = 115792089237316195423570985008687907853269984665640564039457584007913129639935'], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '72.6'}, u'StandardToken': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test1626.sol:179:14: Warning: Integer Overflow.\n    uint c = a + b\nInteger Overflow occurs if:\n    balances[_to] = 1'], 'parity_multisig_bug_2': [], 'integer_underflow': [u'source_code/test1626.sol:175:12: Warning: Integer Underflow.\n    return a - b\nInteger Underflow occurs if:\n    balances[_to] = 50659039041325835497812305941300959223021599278741436456187783392956647317573\n    allowed[_from][msg.sender] = 7237005577332262213973186563042994292552293813585181699341760769313067614068\n    balances[_from] = 7237005577332262213973186563042994292552293813585181699341760769313067614069'], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '90.0'}, u'SafeMath': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '100.0'}, u'ExchangeRate': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test1626.sol:124:3: Warning: Integer Overflow.\n  function updateRate(string _symbol, uint _rate) public onlyOwner {\r\n  ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    _symbol = 115792089237316195423570985008687907853269984665640564039457584007913129639932', u'source_code/test1626.sol:133:3: Warning: Integer Overflow.\n  function updateRates(uint[] data) public onlyOwner {\r\n  ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    data = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test1626.sol:150:3: Warning: Integer Overflow.\n  function getRate(string _symbol) public constant returns(uint) {\r\n  ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    _symbol = 115792089237316195423570985008687907853269984665640564039457584007913129639935'], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '35.4'}, u'MainSale': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test1626.sol:100:5: Warning: Integer Overflow.\n    authorizers.length++\nInteger Overflow occurs if:\n    authorizers.length = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    authorizerIndex[_addr] = 115792089237316195423570985008687907853269984665640564039457584007913129639935'], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '63.8'}, u'Ownable': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '99.4'}, u'FoxToken': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test1626.sol:179:14: Warning: Integer Overflow.\n    uint c = a + b\nInteger Overflow occurs if:\n    balances[_to] = 1\n    _value = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    tradingStarted = 255'], 'parity_multisig_bug_2': [], 'integer_underflow': [u'source_code/test1626.sol:399:3: Warning: Integer Underflow.\n  string public name = "Fox Token"', u'source_code/test1626.sol:175:12: Warning: Integer Underflow.\n    return a - b\nInteger Underflow occurs if:\n    balances[_to] = 50659039041325835497812305941300959223021599278741436456187783392956647317573\n    _value = 7237005577332262213973186563042994292552293813585181699341760769313067614069\n    allowed[_from][msg.sender] = 7237005577332262213973186563042994292552293813585181699341760769313067614068\n    balances[_from] = 7237005577332262213973186563042994292552293813585181699341760769313067614069\n    tradingStarted = 255', u'source_code/test1626.sol:400:3: Warning: Integer Underflow.\n  string public symbol = "FOX"'], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '77.2'}, u'BasicToken': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test1626.sol:179:14: Warning: Integer Overflow.\n    uint c = a + b\nInteger Overflow occurs if:\n    balances[_to] = 115792089237316195423570985008687907852844631706989390960128365748614829458910\n    _value = 57896044618658097711785492504343953926634992332820282019710344908039134214326\n    balances[msg.sender] = 57896044618658097711785492504343953926634992332820282019710344908039134214325'], 'parity_multisig_bug_2': [], 'integer_underflow': [u'source_code/test1626.sol:175:12: Warning: Integer Underflow.\n    return a - b\nInteger Underflow occurs if:\n    balances[msg.sender] = 0\n    _value = 1'], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '99.8'}, u'MintableToken': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test1626.sol:179:14: Warning: Integer Overflow.\n    uint c = a + b\nInteger Overflow occurs if:\n    balances[_to] = 1'], 'parity_multisig_bug_2': [], 'integer_underflow': [u'source_code/test1626.sol:175:12: Warning: Integer Underflow.\n    return a - b\nInteger Underflow occurs if:\n    balances[_to] = 50659039041325835497812305941300959223021599278741436456187783392956647317573\n    allowed[_from][msg.sender] = 7237005577332262213973186563042994292552293813585181699341760769313067614068\n    balances[_from] = 7237005577332262213973186563042994292552293813585181699341760769313067614069'], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '93.5'}}}

