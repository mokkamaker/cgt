{u'source_code/test3065.sol': {u'StandardToken': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test3065.sol:45:17: Warning: Integer Overflow.\n    uint256 c = a + b\nInteger Overflow occurs if:\n    _value = 37717208912933073374861050775867160511051478474789766132129094234564326678807\n    balances[_to] = 95515132405035013240498949941729301185179799140209929091396633094036584928231\n    allowed[_from][msg.sender] = 37717208912933073374861050775867160511051478474789766132129094234564326678807\n    balances[_from] = 37717208912933073374861050775867160511051478474789766132129094234564326678807\n    _to = 1461501637330902918203684832716283019655932542975'], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '99.9'}, u'InbestTokenDistributor': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test3065.sol:537:3: Warning: Integer Overflow.\n  function addWallets(address[] _addresses) public onlyOwner{\r\n  ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    _addresses = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test3065.sol:517:3: Warning: Integer Overflow.\n  function distributeTokensToWallets(address[] _addresses) public onlyOwner{\r\n  ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    _addresses = 115792089237316195423570985008687907853269984665640564039457584007913129639935'], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '62.7'}, u'SafeMath': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '100.0'}, u'InbestToken': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test3065.sol:45:17: Warning: Integer Overflow.\n    uint256 c = a + b\nInteger Overflow occurs if:\n    balances[_to] = 95515132405035013240498949941729301185179799140209929091396633094036584928231\n    allowed[_from][msg.sender] = 37717208912933073374861050775867160511051478474789766132129094234564326678807\n    balances[_from] = 37717208912933073374861050775867160511051478474789766132129094234564326678807'], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '99.9'}, u'Ownable': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '99.5'}, u'BasicToken': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test3065.sol:45:17: Warning: Integer Overflow.\n    uint256 c = a + b\nInteger Overflow occurs if:\n    balances[_to] = 85653202831209899131921273706816539903532775246499202405936884825549521553152\n    _value = 44369063854674067291029404066660873444229566625561754964912869797988903417852\n    balances[msg.sender] = 44369063854674067291029404066660873444229566625561754964912869797988903417852\n    _to = 1461501637330902918203684832716283019655932542975'], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '99.6'}, u'InbestDistribution': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test3065.sol:397:5: Warning: Integer Overflow.\n    allocations[_recipient] = Allocation(uint8(AllocationType.PRESALE), startTime.add(CLIFF), startTime.add(CLIFF).add(VESTING), _totalAllocated, 0)\nInteger Overflow occurs if:\n    startTime = 4194304\n    CLIFF = 115792089237316195423570985008682198862499160826116330895579786027367598653438\n    _totalAllocated = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    VESTING = 0\n    companyWallet = 0\n    AVAILABLE_PRESALE_SUPPLY = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    _recipient = 1461501637330902918203684832716283019655932542975\n    owner = 0\n    allocations[_recipient].totalAllocated = 0', u'source_code/test3065.sol:417:154: Warning: Integer Overflow.\n     newAmountClaimed = allocations[_recipient].totalAllocated.mul(now.sub(allocations[_recipient].endCliff)).div(allocations[_recipient].endVesting.sub(allocations[_recipient].endCliff\nInteger Overflow occurs if:\n    allocations[_recipient].amountClaimed = 0\n    allocations[_recipient].endVesting = 1\n    allocations[_recipient].totalAllocated = 1\n    allocations[_recipient].endCliff = 0\n    companyWallet = 0\n    startTime = 0\n    _recipient = 1461501637330902918203684832716283019655932542975', u'source_code/test3065.sol:456:11: Warning: Integer Overflow.\n   return allocations[companyWallet].totalAllocated', u'source_code/test3065.sol:442:12: Warning: Integer Overflow.\n   require(allocations[companyWallet].amountClaimed\nInteger Overflow occurs if:\n    startTime = 0\n    _tokensToTransfer = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    companyWallet = 0\n    _recipient = 1461501637330902918203684832716283019655932542975\n    owner = 0', u'source_code/test3065.sol:417:25: Warning: Integer Overflow.\n     newAmountClaimed = allocations[_recipient].totalAllocated\nInteger Overflow occurs if:\n    allocations[_recipient].endVesting = 115792089237316195423570985008687907853269984665640564039457584007913127542782\n    allocations[_recipient].endCliff = 0\n    allocations[_recipient].amountClaimed = 0\n    allocations[_recipient].totalAllocated = 1\n    companyWallet = 0\n    startTime = 57896044618658097710216217070497283735676044977018365415703203142840556191742\n    _recipient = 1461501637330902918203684832716283019655932542975', u'source_code/test3065.sol:417:115: Warning: Integer Overflow.\n     newAmountClaimed = allocations[_recipient].totalAllocated.mul(now.sub(allocations[_recipient].endCliff)).div(allocations[_recipient].endVesting\nInteger Overflow occurs if:\n    allocations[_recipient].amountClaimed = 0\n    allocations[_recipient].endVesting = 1\n    allocations[_recipient].totalAllocated = 1\n    allocations[_recipient].endCliff = 0\n    companyWallet = 0\n    startTime = 0\n    _recipient = 1461501637330902918203684832716283019655932542975', u'source_code/test3065.sol:45:17: Warning: Integer Overflow.\n    uint256 c = a + b\nInteger Overflow occurs if:\n    startTime = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    _totalAllocated = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    CLIFF = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    companyWallet = 0\n    AVAILABLE_PRESALE_SUPPLY = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    _recipient = 1461501637330902918203684832716283019655932542975\n    owner = 0\n    allocations[_recipient].totalAllocated = 0', u'source_code/test3065.sol:442:79: Warning: Integer Overflow.\n   require(allocations[companyWallet].amountClaimed.add(_tokensToTransfer) <= allocations[companyWallet].totalAllocated\nInteger Overflow occurs if:\n    startTime = 0\n    _tokensToTransfer = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    companyWallet = 0\n    _recipient = 1461501637330902918203684832716283019655932542975\n    owner = 0', u'source_code/test3065.sol:344:3: Warning: Integer Overflow.\n  mapping (address => Allocation) public allocations', u'source_code/test3065.sol:456:57: Warning: Integer Overflow.\n   return allocations[companyWallet].totalAllocated.sub(allocations[companyWallet].amountClaimed', u'source_code/test3065.sol:417:76: Warning: Integer Overflow.\n     newAmountClaimed = allocations[_recipient].totalAllocated.mul(now.sub(allocations[_recipient].endCliff\nInteger Overflow occurs if:\n    allocations[_recipient].endVesting = 115792089237316195423570985008687907853269984665640564039457584007913127542782\n    allocations[_recipient].endCliff = 0\n    allocations[_recipient].amountClaimed = 0\n    allocations[_recipient].totalAllocated = 1\n    companyWallet = 0\n    startTime = 57896044618658097710216217070497283735676044977018365415703203142840556191742\n    _recipient = 1461501637330902918203684832716283019655932542975'], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '84.8'}}}

