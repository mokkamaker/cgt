{u'source_code/test1500.sol': {u'TokenTransferProxy': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '68.6'}, u'SafeMath': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '100.0'}, u'Exchange': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test1500.sol:642:5: Warning: Integer Overflow.\n    function fillOrdersUpTo(\r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    orderAddresses = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test1500.sol:612:5: Warning: Integer Overflow.\n    function batchFillOrKillOrders(\r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    orderAddresses = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test1500.sol:702:16: Warning: Integer Overflow.\n        return keccak256(\r\n        ^\nSpanning multiple lines.', u'source_code/test1500.sol:222:18: Warning: Integer Overflow.\n        uint c = a + b\nInteger Overflow occurs if:\n    filled[orderHash] = 1\n    cancelled[orderHash] = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test1500.sol:739:5: Warning: Integer Overflow.\n    function testRecovery(bytes32 h, uint8 v, bytes32 r, bytes32 s) returns (address) {\r\n    ^\nSpanning multiple lines.', u'source_code/test1500.sol:582:5: Warning: Integer Overflow.\n    function batchFillOrders(\r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    orderAddresses = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test1500.sol:674:5: Warning: Integer Overflow.\n    function batchCancelOrders(\r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    orderAddresses = 115792089237316195423570985008687907853269984665640564039457584007913129639935'], 'parity_multisig_bug_2': [], 'integer_underflow': [u'source_code/test1500.sol:746:24: Warning: Integer Underflow.\n        address addr = ecrecover(h, v, r, s)'], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '47.4'}, u'Whitelist': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '98.9'}, u'Ownable': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '99.4'}, u'Token': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '99.8'}}}

