{u'source_code/test2889.sol': {u'Ownable': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '99.7'}, u'SafeMath': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '100.0'}, u'SafeERC20': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '100.0'}, u'ERC20Relay': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test2889.sol:246:5: Warning: Integer Overflow.\n    Anchor[] public anchors', u'source_code/test2889.sol:446:9: Warning: Integer Overflow.\n        require(withdrawals[hash].destination != address(0), "No such withdrawal")\nInteger Overflow occurs if:\n    verifierAddressToIndex[addr] = 1\n    withdrawals[hash].destination = 0\n    verifiers[verifierAddressToIndex[addr]] = 2', u'source_code/test2889.sol:431:18: Warning: Integer Overflow.\n            emit WithdrawalProcessed(destination, net, txHash, blockHash, blockNumber)\nInteger Overflow occurs if:\n    verifierAddressToIndex[addr] = 1\n    requiredVerifiers = 0\n    withdrawals[hash].destination = 1461501637330900322055255565302464250808140562431\n    destination = 1461501637330900322055255565302464250808140562431\n    amount = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    verifiers[verifierAddressToIndex[addr]] = 2\n    fees = 0', u'source_code/test2889.sol:412:9: Warning: Integer Overflow.\n        require(w.destination == destination, "Destination mismatch")\nInteger Overflow occurs if:\n    fees = 37692844559097723546732996768237404193742899322028918035543663301242529712325\n    verifierAddressToIndex[addr] = 110427941548649020598956093796432407239217743554726184882600387580788736\n    amount = 105681657968231461246388310815428480452342622932677518695511962451263555159826\n    withdrawals[hash].destination = 2535301200456458802993406410752\n    destination = 2540252960613600324093002907648\n    verifiers[verifierAddressToIndex[addr]] = 110427941548649020598956093796432407239217743554726184882600387580788737', u'source_code/test2889.sol:430:13: Warning: Integer Overflow.\n            w.processed\nInteger Overflow occurs if:\n    verifierAddressToIndex[addr] = 1\n    requiredVerifiers = 0\n    withdrawals[hash].destination = 1461501637330902918203684832716278516056305172479\n    destination = 1461501637330902918203684832716278516056305172479\n    amount = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    verifiers[verifierAddressToIndex[addr]] = 2\n    fees = 0', u'source_code/test2889.sol:224:5: Warning: Integer Overflow.\n    mapping (bytes32 => Withdrawal) public withdrawals', u'source_code/test2889.sol:417:13: Warning: Integer Overflow.\n            require(approvals[i] != msg.sender, "Already approved withdrawal")\nInteger Overflow occurs if:\n    fees = 45673657642006438495229088503495372098301723078983117492342603328210534933909\n    verifierAddressToIndex[addr] = 3369993333393829974333376885877453834204643052817571560137951281152\n    amount = 94597212812196049404906519607447312696273202082545705726370754262931961020992\n    withdrawals[hash].destination = 730750818665451459101842416358141509827966271488\n    destination = 730750818665451459101842416358141509827966271488\n    verifiers[verifierAddressToIndex[addr]] = 3369993333393829974333376885877453834204643052817571560137951281153', u'source_code/test2889.sol:413:9: Warning: Integer Overflow.\n        require(w.amount == net, "Amount mismatch")\nInteger Overflow occurs if:\n    fees = 3213876088517980539933551585417013634276546851241404917612544\n    verifierAddressToIndex[addr] = 28948022309329048855892746252171976963317496166410141009864396001978282409984\n    amount = 115792089237316192209694896490707367919718399248626929762910732766508212027391\n    withdrawals[hash].destination = 730750818665451459101842416358141509827966271488\n    destination = 730750818665451459101842416358141509827966271488\n    verifiers[verifierAddressToIndex[addr]] = 28948022309329048855892746252171976963317496166410141009864396001978282409985', u'source_code/test2889.sol:450:9: Warning: Integer Overflow.\n        require(!w.processed, "Withdrawal already processed")\nInteger Overflow occurs if:\n    verifierAddressToIndex[addr] = 70368744177664\n    withdrawals[hash].destination = 1461501637330902918203684832716283019655932542975\n    verifiers[verifierAddressToIndex[addr]] = 70368744177665', u'source_code/test2889.sol:349:32: Warning: Integer Overflow.\n        address[] memory ret = new address[](verifiers.length.sub(1))\nInteger Overflow occurs if:\n    verifiers.length = 28948022309329048855892746252171976963317496166410141009864396001978282409984'], 'parity_multisig_bug_2': [], 'integer_underflow': [u'source_code/test2889.sol:403:24: Warning: Integer Underflow.\n        bytes32 hash = keccak256(abi.encodePacked(txHash, blockHash, blockNumber))\nInteger Underflow occurs if:\n    verifierAddressToIndex[addr] = 28948022309329048855892746252171976963317496166410141009864396001978282409984\n    fees = 0\n    destination = 1461501637330902918203684832716283019655932542975\n    amount = 1\n    verifiers[verifierAddressToIndex[addr]] = 28948022309329048855892746252171976963317496166410141009864396001978282409985'], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '64.4'}}}

