{u'source_code/test3636.sol': {u'OracleContractAdapter': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test3636.sol:101:5: Warning: Integer Overflow.\n    function withdrawnTokens(address[] tokens, address _to) onlyContractOwner returns(uint) {\r\n    ^\nSpanning multiple lines.', u'source_code/test3636.sol:197:31: Warning: Integer Overflow.\n            address _oracle = _blacklist[_idx]\nInteger Overflow occurs if:\n    _blacklist = 115792089237316195423570985008687907853269984665640564039457584007913129639899\n    contractOwner = 0', u'source_code/test3636.sol:179:31: Warning: Integer Overflow.\n            address _oracle = _whitelist[_idx]\nInteger Overflow occurs if:\n    _whitelist = 115792089237316195423570985008687907853269984665640564039457584007913129639899\n    contractOwner = 0', u'source_code/test3636.sol:173:5: Warning: Integer Overflow.\n    function addOracles(address[] _whitelist) \r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    _whitelist = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test3636.sol:191:5: Warning: Integer Overflow.\n    function removeOracles(address[] _blacklist) \r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    _blacklist = 115792089237316195423570985008687907853269984665640564039457584007913129639935'], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '74.4'}, u'Profiterole': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test3636.sol:652:5: Warning: Integer Overflow.\n    mapping(uint => Deposit) public distributionDeposits', u'source_code/test3636.sol:197:31: Warning: Integer Overflow.\n            address _oracle = _blacklist[_idx]\nInteger Overflow occurs if:\n    contractOwner = 0', u'source_code/test3636.sol:715:5: Warning: Integer Overflow.\n    function removeDistributionSources(address[] _blacklist) external onlyContractOwner returns (uint) {\r\n    ^\nSpanning multiple lines.', u'source_code/test3636.sol:717:44: Warning: Integer Overflow.\n            delete distributionSourcesList[_blacklist[_idx]\nInteger Overflow occurs if:\n    contractOwner = 0', u'source_code/test3636.sol:179:31: Warning: Integer Overflow.\n            address _oracle = _whitelist[_idx]\nInteger Overflow occurs if:\n    contractOwner = 0', u'source_code/test3636.sol:173:5: Warning: Integer Overflow.\n    function addOracles(address[] _whitelist) \r\n    ^\nSpanning multiple lines.', u'source_code/test3636.sol:794:20: Warning: Integer Overflow.\n            return _deposit.leftToWithdraw', u'source_code/test3636.sol:191:5: Warning: Integer Overflow.\n    function removeOracles(address[] _blacklist) \r\n    ^\nSpanning multiple lines.', u'source_code/test3636.sol:818:16: Warning: Integer Overflow.\n        return distributionDeposits[_distributionDate].left'], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '42.3'}, u'SafeMath': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '100.0'}, u'Object': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test3636.sol:101:5: Warning: Integer Overflow.\n    function withdrawnTokens(address[] tokens, address _to) onlyContractOwner returns(uint) {\r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    tokens = 115792089237316195423570985008687907853269984665640564039457584007913129639935'], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '56.3'}, u'Owned': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '99.8'}, u'ProfiteroleEmitter': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '100.0'}, u'EmissionProviderEmitter': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '100.0'}, u'Treasury': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test3636.sol:580:41: Warning: Integer Overflow.\n            _lockedSum = _lockedSum.add(_lockedDeposits.date2deposit\nInteger Overflow occurs if:\n    periodsCount = 748288838313422294120286634350736906063837462003712\n    user2lastPeriodParticipated[_userKey] = 748288838313422294120286634350736906063837462003712\n    oracles[msg.sender] = 255', u'source_code/test3636.sol:197:31: Warning: Integer Overflow.\n            address _oracle = _blacklist[_idx]\nInteger Overflow occurs if:\n    contractOwner = 0', u'source_code/test3636.sol:593:64: Warning: Integer Overflow.\n        uint _lastTransferDate = _transferPeriod.transfer2date[_transferPeriod.user2lastTransferIdx\nInteger Overflow occurs if:\n    user2lastPeriodParticipated[_userKey] = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    periodsCount = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test3636.sol:568:30: Warning: Integer Overflow.\n            uint _lockDate = _lockedDeposits.index2Date\nInteger Overflow occurs if:\n    periodsCount = 748288838313422294120286634350736906063837462003712\n    user2lastPeriodParticipated[_userKey] = 748288838313422294120286634350736906063837462003712\n    oracles[msg.sender] = 255', u'source_code/test3636.sol:179:31: Warning: Integer Overflow.\n            address _oracle = _whitelist[_idx]\nInteger Overflow occurs if:\n    contractOwner = 0', u'source_code/test3636.sol:173:5: Warning: Integer Overflow.\n    function addOracles(address[] _whitelist) \r\n    ^\nSpanning multiple lines.', u'source_code/test3636.sol:191:5: Warning: Integer Overflow.\n    function removeOracles(address[] _blacklist) \r\n    ^\nSpanning multiple lines.', u'source_code/test3636.sol:605:105: Warning: Integer Overflow.\n        uint _lastRecordedDate = _transfersCount != 0 ? _depositPeriod.transfer2date[_transfersCount] : _depositPeriod.startDate\nInteger Overflow occurs if:\n    user2lastPeriodParticipated[_userKey] = 0', u'source_code/test3636.sol:605:57: Warning: Integer Overflow.\n        uint _lastRecordedDate = _transfersCount != 0 ? _depositPeriod.transfer2date\nInteger Overflow occurs if:\n    user2lastPeriodParticipated[_userKey] = 0', u'source_code/test3636.sol:593:34: Warning: Integer Overflow.\n        uint _lastTransferDate = _transferPeriod.transfer2date\nInteger Overflow occurs if:\n    user2lastPeriodParticipated[_userKey] = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    periodsCount = 115792089237316195423570985008687907853269984665640564039457584007913129639935'], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '37.1'}, u'TreasuryEmitter': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '100.0'}, u'EmissionProvider': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test3636.sol:1164:16: Warning: Integer Overflow.\n        return tokenSoftcap + tokenHardcapValue\nInteger Overflow occurs if:\n    tokenSoftcap = 1\n    tokenHardcapValue = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test3636.sol:197:31: Warning: Integer Overflow.\n            address _oracle = _blacklist[_idx]\nInteger Overflow occurs if:\n    contractOwner = 0', u'source_code/test3636.sol:179:31: Warning: Integer Overflow.\n            address _oracle = _whitelist[_idx]\nInteger Overflow occurs if:\n    contractOwner = 0', u'source_code/test3636.sol:173:5: Warning: Integer Overflow.\n    function addOracles(address[] _whitelist) \r\n    ^\nSpanning multiple lines.', u'source_code/test3636.sol:1201:5: Warning: Integer Overflow.\n    function addUsers(address[] _whitelist) public onlyOracleOrOwner onlySale returns (uint) {\r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    _whitelist = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test3636.sol:1210:5: Warning: Integer Overflow.\n    function removeUsers(address[] _blacklist) public onlyOracleOrOwner onlySale returns (uint) {\r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    _blacklist = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test3636.sol:191:5: Warning: Integer Overflow.\n    function removeOracles(address[] _blacklist) \r\n    ^\nSpanning multiple lines.', u'source_code/test3636.sol:101:5: Warning: Integer Overflow.\n    function withdrawnTokens(address[] tokens, address _to) onlyContractOwner returns(uint) {\r\n    ^\nSpanning multiple lines.', u'source_code/test3636.sol:1170:16: Warning: Integer Overflow.\n        return tokenSoftcap + tokenHardcapIssuedValue\nInteger Overflow occurs if:\n    tokenSoftcap = 1\n    tokenHardcapIssuedValue = 115792089237316195423570985008687907853269984665640564039457584007913129639935'], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '61.0'}}}

