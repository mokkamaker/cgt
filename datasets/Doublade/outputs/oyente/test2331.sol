{u'source_code/test2331.sol': {u'theCyber': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test2331.sol:237:3: Warning: Integer Overflow.\n  function broadcastMessage(string _message) public membersOnly {\r\n  ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    _message = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test2331.sol:137:3: Warning: Integer Overflow.\n  function changeKey(string _newMemberKey) public membersOnly {\r\n  ^\nSpanning multiple lines.', u'source_code/test2331.sol:244:3: Warning: Integer Overflow.\n  function directMessage(uint8 _toMemberId, string _message) public membersOnly {\r\n  ^\nSpanning multiple lines.', u'source_code/test2331.sol:251:3: Warning: Integer Overflow.\n  function passMessage(address _contractAddress, string _message) public membersOnly {\r\n  ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    _message = 115792089237316195423570985008687907853269984665640564039457584007913129639935'], 'parity_multisig_bug_2': [], 'integer_underflow': [u'source_code/test2331.sol:289:5: Warning: Integer Underflow.\n    return (\r\n    ^\nSpanning multiple lines.\nInteger Underflow occurs if:\n    return (\r\n      members_[_memberId].name,\r\n      members_[_memberId].pubkey,\r\n      members_[_memberId].memberSince,\r\n      members_[_memberId].inactiveSince,\r\n      memberToAddress_[_memberId]\r\n    ) = 1', u'source_code/test2331.sol:17:1: Warning: Integer Underflow.\ncontract theCyber {\r\n^\nSpanning multiple lines.\nInteger Underflow occurs if:\n    addressIsMember_[_newMemberAddress] = 0\n    addressIsMember_[msg.sender] = 255'], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '62.2'}}}

