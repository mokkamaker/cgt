{u'source_code/test2032.sol': {u'MerialCoin': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test2032.sol:83:33: Warning: Integer Overflow.\n        uint previousBalances = balanceOf[_from] + balanceOf[_to]\nInteger Overflow occurs if:\n    balanceOf[_to] = 102754238\n    _value = 0\n    balanceOf[_from] = 115792089237316195423570985008687907853269984665640564039457584007913129639934\n    _from = 0\n    frozenAddress[_to] = 0\n    frozenAddress[_from] = 0\n    _to = 1461501637330902918203684832716283019655932542975\n    allowance[_from][msg.sender] = 0', u'source_code/test2032.sol:91:16: Warning: Integer Overflow.\n        assert(balanceOf[_from] + balanceOf[_to]\nInteger Overflow occurs if:\n    balanceOf[_to] = 57896044618763410003454049691041871954318662765139177115129341115211412668417\n    _value = 0\n    balanceOf[_from] = 57896044618658097711785492504343953926634992332820282019728792003956564819967\n    _from = 0\n    frozenAddress[_to] = 0\n    frozenAddress[_from] = 0\n    _to = 1461501637330902918203684832716283019655932542975\n    allowance[_from][msg.sender] = 0'], 'parity_multisig_bug_2': [], 'integer_underflow': [u'source_code/test2032.sol:28:5: Warning: Integer Underflow.\n    string  public symbol', u'source_code/test2032.sol:29:5: Warning: Integer Underflow.\n    string  public name'], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '84.5'}, u'SafeMath': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '100.0'}}}

