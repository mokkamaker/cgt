{u'source_code/test1543.sol': {u'StandardToken': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test1543.sol:71:13: Warning: Integer Overflow.\n        c = a + b\nInteger Overflow occurs if:\n    _value = 37717208912933073374861050775867160511051478474789766132129094234564326678807\n    balances[_to] = 95515132405035013240498949941729301185179799140209929091396633094036584928231\n    allowed[_from][msg.sender] = 37717208912933073374861050775867160511051478474789766132129094234564326678807\n    balances[_from] = 37717208912933073374861050775867160511051478474789766132129094234564326678807\n    _to = 1461501637330902918203684832716283019655932542975'], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '99.9'}, u'SafeMath': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '100.0'}, u'Blacklist': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '99.8'}, u'HasNoEther': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '99.3'}, u'Address': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '100.0'}, u'luxbio_bio': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test1543.sol:506:52: Warning: Integer Overflow.\n            require(addedValue <= _timeLimit().mul(chkInvestorBalance[from]._limit\nInteger Overflow occurs if:\n    owners[to] = 255\n    timelock = 255\n    p2pAddrs[msg.sender] = 255\n    owners[msg.sender] = 255\n    blacklisted[node] = 0', u'source_code/test1543.sol:502:17: Warning: Integer Overflow.\n                chkInvestorBalance[from] = chkBalance(0, new_initial, new_initial.div(5))\nInteger Overflow occurs if:\n    owners[to] = 255\n    timelock = 255\n    p2pAddrs[msg.sender] = 255\n    owners[msg.sender] = 255\n    blacklisted[node] = 0', u'source_code/test1543.sol:500:17: Warning: Integer Overflow.\n            if (chkInvestorBalance[from]._initial\nInteger Overflow occurs if:\n    owners[to] = 255\n    timelock = 255\n    p2pAddrs[msg.sender] = 255\n    owners[msg.sender] = 255\n    blacklisted[node] = 0', u'source_code/test1543.sol:71:13: Warning: Integer Overflow.\n        c = a + b\nInteger Overflow occurs if:\n    owners[to] = 255\n    timelock = 255\n    p2pAddrs[msg.sender] = 255\n    owners[msg.sender] = 255\n    blacklisted[node] = 0'], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '19.2'}, u'BasicToken': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test1543.sol:71:13: Warning: Integer Overflow.\n        c = a + b\nInteger Overflow occurs if:\n    balances[_to] = 85653202831209899131921273706816539903532775246499202405936884825549521553152\n    _value = 44369063854674067291029404066660873444229566625561754964912869797988903417852\n    balances[msg.sender] = 44369063854674067291029404066660873444229566625561754964912869797988903417852\n    _to = 1461501637330902918203684832716283019655932542975'], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '99.6'}, u'TimelockToken': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test1543.sol:506:52: Warning: Integer Overflow.\n            require(addedValue <= _timeLimit().mul(chkInvestorBalance[from]._limit\nInteger Overflow occurs if:\n    value = 0\n    owners[to] = 255\n    timelock = 255\n    p2pAddrs[msg.sender] = 255\n    owners[msg.sender] = 255\n    blacklisted[node] = 0', u'source_code/test1543.sol:502:17: Warning: Integer Overflow.\n                chkInvestorBalance[from] = chkBalance(0, new_initial, new_initial.div(5))\nInteger Overflow occurs if:\n    owners[to] = 255\n    timelock = 255\n    p2pAddrs[msg.sender] = 255\n    owners[msg.sender] = 255\n    blacklisted[node] = 0', u'source_code/test1543.sol:500:17: Warning: Integer Overflow.\n            if (chkInvestorBalance[from]._initial\nInteger Overflow occurs if:\n    owners[to] = 255\n    timelock = 255\n    p2pAddrs[msg.sender] = 255\n    owners[msg.sender] = 255\n    blacklisted[node] = 0', u'source_code/test1543.sol:71:13: Warning: Integer Overflow.\n        c = a + b\nInteger Overflow occurs if:\n    value = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    owners[to] = 255\n    timelock = 255\n    p2pAddrs[msg.sender] = 255\n    owners[msg.sender] = 255\n    blacklisted[node] = 0'], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '19.6'}, u'MultiOwnable': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '99.7'}}}

