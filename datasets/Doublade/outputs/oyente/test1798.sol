{u'source_code/test1798.sol': {u'usingOraclize': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test1798.sol:122:5: Warning: Integer Overflow.\n    function __callback(bytes32 myid, string result, bytes proof) {\r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    result = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test1798.sol:119:5: Warning: Integer Overflow.\n    function __callback(bytes32 myid, string result) {\r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    result = 115792089237316195423570985008687907853269984665640564039457584007913129639932'], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '40.6'}, u'METAXCrowdSale': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test1798.sol:1251:13: Warning: Integer Overflow.\n            balances[_to] + _amount\nInteger Overflow occurs if:\n    balances[_to] = 115792089237316195423570985008687907852929702298719625575994204896882187098296\n    allowed[_from][msg.sender] = 43422033463993573283839119378257965444976244249615211514796594002966269975960\n    balances[_from] = 43422033463993573283839119378257965444976244249615211514796594002966269975960', u'source_code/test1798.sol:1282:5: Warning: Integer Overflow.\n    function stringToUint(string s) returns(uint) {\r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    s = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test1798.sol:122:5: Warning: Integer Overflow.\n    function __callback(bytes32 myid, string result, bytes proof) {\r\n    ^\nSpanning multiple lines.', u'source_code/test1798.sol:1043:5: Warning: Integer Overflow.\n    address[] public addresses', u'source_code/test1798.sol:1128:5: Warning: Integer Overflow.\n    function __callback(bytes32 myid, string result) {\r\n    ^\nSpanning multiple lines.'], 'parity_multisig_bug_2': [], 'integer_underflow': [u'source_code/test1798.sol:1165:27: Warning: Integer Underflow.\n            totalSupply = totalSupply - _amount\nInteger Underflow occurs if:\n    balances[address(this)] = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    totalSupply = 115792089237316195423570985008687907853269984665640564039457584007913129639934\n    owner = 0', u'source_code/test1798.sol:1039:1: Warning: Integer Underflow.\ncontract METAXCrowdSale is ERC20, usingOraclize\r\n^\nSpanning multiple lines.\nInteger Underflow occurs if:\n    ico_end_date = 0\n    OAR = 0\n    owner = 0\n    crowd_sale_status = 255'], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '58.5'}}}

