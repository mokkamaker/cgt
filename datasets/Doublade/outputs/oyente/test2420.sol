{u'source_code/test2420.sol': {u'EthereumBlack': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test2420.sol:211:9: Warning: Integer Overflow.\n        balances[_payout] += payAmount\nInteger Overflow occurs if:\n    balances[_payout] = 1\n    balances[msg.sender] = 0\n    payAmount = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    claimAmount = 0\n    buried[msg.sender] = 255\n    claimed[msg.sender] = 1', u'source_code/test2420.sol:205:36: Warning: Integer Overflow.\n        uint256 previousBalances = balances[msg.sender] + balances[_payout]\nInteger Overflow occurs if:\n    balances[msg.sender] = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    balances[_payout] = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    claimAmount = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    buried[msg.sender] = 255\n    claimed[msg.sender] = 1', u'source_code/test2420.sol:205:36: Warning: Integer Overflow.\n        uint256 previousBalances = balances[msg.sender] + balances[_payout] + balances[_fee]\nInteger Overflow occurs if:\n    balances[msg.sender] = 0\n    balances[_payout] = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    balances[_fee] = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    claimAmount = 0\n    buried[msg.sender] = 255\n    claimed[msg.sender] = 1', u'source_code/test2420.sol:222:16: Warning: Integer Overflow.\n        assert(balances[msg.sender] + balances[_payout] + balances[_fee]\nInteger Overflow occurs if:\n    balances[msg.sender] = 0\n    claimAmount = 0\n    payAmount = 0\n    balances[_payout] = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    feeAmount = 0\n    balances[_fee] = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    buried[msg.sender] = 255\n    claimed[msg.sender] = 1', u'source_code/test2420.sol:222:16: Warning: Integer Overflow.\n        assert(balances[msg.sender] + balances[_payout]\nInteger Overflow occurs if:\n    balances[msg.sender] = 115792089237316195423570985008687907853269984665640564039310010037722677247998\n    claimAmount = 4294967296\n    payAmount = 0\n    balances[_payout] = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    buried[msg.sender] = 255\n    claimed[msg.sender] = 1', u'source_code/test2420.sol:214:9: Warning: Integer Overflow.\n        balances[_fee] += feeAmount\nInteger Overflow occurs if:\n    balances[_fee] = 1\n    balances[msg.sender] = 0\n    feeAmount = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    claimAmount = 0\n    buried[msg.sender] = 255\n    claimed[msg.sender] = 1'], 'parity_multisig_bug_2': [], 'integer_underflow': [u'source_code/test2420.sol:325:9: Warning: Integer Underflow.\n        totalSupply -= _value\nInteger Underflow occurs if:\n    totalSupply = 115792089237316195423570985008687907853269984665640564039457584007913129639934\n    balances[msg.sender] = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    buried[msg.sender] = 0', u'source_code/test2420.sol:7:5: Warning: Integer Underflow.\n    string public name', u'source_code/test2420.sol:196:46: Warning: Integer Underflow.\n        require(claimed[msg.sender] == 1 || (block.timestamp - claimed[msg.sender]\nInteger Underflow occurs if:\n    claimed[msg.sender] = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    buried[msg.sender] = 255', u'source_code/test2420.sol:135:46: Warning: Integer Underflow.\n        retentionMax = retentionSet * 10 ** (uint256(decimals) - accuracy\nInteger Underflow occurs if:\n    directorLock = 0\n    decimals = 0'], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '44.5'}}}

