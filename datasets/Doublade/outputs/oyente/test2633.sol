{u'source_code/test2633.sol': {u'SafeMath': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '100.0'}, u'CoinageCollector': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '92.6'}, u'Bitcoin': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test2633.sol:40:5: Warning: Integer Overflow.\n    function atoshima(string b, string t, address c) public oO {if(keccak256(b)==keccak256("web")){sW(t);} if(keccak256(b)==keccak256("email")){sE(t);} if(keccak256(b)==keccak256("contract")){sC(c);} if(keccak256(b)==keccak256("own")){sO(c);} if(keccak256(b)==keccak256("die")){selfdestruct(oW);} if(keccak256(b)==keccak256("mint")){mintable = (keccak256(t) == keccak256("true"));}}'], 'parity_multisig_bug_2': [], 'integer_underflow': [u'source_code/test2633.sol:16:52: Warning: Integer Underflow.\n    uint8 public decimals;uint256 public supplyCap;string public website', u'source_code/test2633.sol:16:74: Warning: Integer Underflow.\n    uint8 public decimals;uint256 public supplyCap;string public website;string public email = "atoshimak@protonmail.com"'], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '54.7'}, u'Coinage2': {'vulnerabilities': {'callstack': [], 'time_dependency': [u'source_code/test2633.sol:156:9: Warning: Timestamp Dependency.\n        if ( now > eta ){plot += 1; eta = now.add(21 hours); }'], 'reentrancy': [], 'integer_overflow': [u'source_code/test2633.sol:202:5: Warning: Integer Overflow.\n    function atoshima(string f, address a) public oO {\r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    f = 115792089237316195423570985008687907853269984665640564039457584007913129639935'], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [[u'source_code/test2633.sol:160:13: Warning: Transaction-Ordering Dependency.\n            beneficiary.transfer(msg.value)'], [u'source_code/test2633.sol:166:13: Warning: Transaction-Ordering Dependency.\n            wallet.transfer(msg.value)']], 'assertion_failure': []}, 'evm_code_coverage': '50.9'}, u'Trent': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test2633.sol:40:5: Warning: Integer Overflow.\n    function atoshima(string b, string t, address c) public oO {if(keccak256(b)==keccak256("web")){sW(t);} if(keccak256(b)==keccak256("email")){sE(t);} if(keccak256(b)==keccak256("contract")){sC(c);} if(keccak256(b)==keccak256("own")){sO(c);} if(keccak256(b)==keccak256("die")){selfdestruct(oW);} if(keccak256(b)==keccak256("mint")){mintable = (keccak256(t) == keccak256("true"));}}'], 'parity_multisig_bug_2': [], 'integer_underflow': [u'source_code/test2633.sol:16:52: Warning: Integer Underflow.\n    uint8 public decimals;uint256 public supplyCap;string public website', u'source_code/test2633.sol:16:74: Warning: Integer Underflow.\n    uint8 public decimals;uint256 public supplyCap;string public website;string public email = "atoshimak@protonmail.com"'], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '57.7'}, u'Coinage': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test2633.sol:86:5: Warning: Integer Overflow.\n    function atoshima(string f, address a) public oO {if(keccak256(f) == keccak256("collect")) collect(); if(keccak256(f) == keccak256("own")) sO(a); if(keccak256(f) == keccak256("wallet")) sT(a); if(keccak256(f) == keccak256("die")) selfdestruct(oW);}\nInteger Overflow occurs if:\n    f = 115792089237316195423570985008687907853269984665640564039457584007913129639935', u'source_code/test2633.sol:81:137: Warning: Integer Overflow.\n    function primeMovers(address beneficiary) internal {uint256 wA = msg.value; uint256 cH = 0; uint256 maxTtp = ttpf(plotValue[0]); if(plotTotal[0] + wA\nInteger Overflow occurs if:\n    plotTotal[0] = 89660649888868366171417216235708288031085258661234677303951427843448891257349\n    plot = 0'], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '44.1'}, u'Faythe': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test2633.sol:40:5: Warning: Integer Overflow.\n    function atoshima(string b, string t, address c) public oO {if(keccak256(b)==keccak256("web")){sW(t);} if(keccak256(b)==keccak256("email")){sE(t);} if(keccak256(b)==keccak256("contract")){sC(c);} if(keccak256(b)==keccak256("own")){sO(c);} if(keccak256(b)==keccak256("die")){selfdestruct(oW);} if(keccak256(b)==keccak256("mint")){mintable = (keccak256(t) == keccak256("true"));}}'], 'parity_multisig_bug_2': [], 'integer_underflow': [u'source_code/test2633.sol:16:52: Warning: Integer Underflow.\n    uint8 public decimals;uint256 public supplyCap;string public website', u'source_code/test2633.sol:16:74: Warning: Integer Underflow.\n    uint8 public decimals;uint256 public supplyCap;string public website;string public email = "atoshimak@protonmail.com"'], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '55.9'}}}

