{u'source_code/test493.sol': {u'LockableOwned': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test493.sol:95:3: Warning: Integer Overflow.\n  function lockUntil(uint256 _untilTime, string _reason) onlyOwner {\r\n  ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    _reason = 115792089237316195423570985008687907853269984665640564039457584007913129639935'], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '72.6'}, u'Token': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test493.sol:43:17: Warning: Integer Overflow.\n    uint256 c = a + b\nInteger Overflow occurs if:\n    _value = 44369063854674067291029404066660873444229566625561754964912869797988903417852\n    balances[_to] = 85653202831209899131921273706816539903532775246499202405936884825549521553152\n    lockedUntilTime = 0\n    balances[_from] = 44369063854674067291029404066660873444229566625561754964912869797988903417852\n    _to = 1461501637330902918203684832716283019655932542975', u'source_code/test493.sol:95:3: Warning: Integer Overflow.\n  function lockUntil(uint256 _untilTime, string _reason) onlyOwner {\r\n  ^\nSpanning multiple lines.', u'source_code/test493.sol:149:3: Warning: Integer Overflow.\n  function approveAndCall(address _spender, uint256 _value, bytes _extraData) lockAffected returns (bool success) {\r\n  ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    _extraData = 115792089237316195423570985008687907853269984665640564039457584007913129639935'], 'parity_multisig_bug_2': [], 'integer_underflow': [u'source_code/test493.sol:109:3: Warning: Integer Underflow.\n  string public symbol', u'source_code/test493.sol:107:3: Warning: Integer Underflow.\n  string public standard', u'source_code/test493.sol:108:3: Warning: Integer Underflow.\n  string public name'], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '64.2'}, u'FutouristToken': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [u'source_code/test493.sol:43:17: Warning: Integer Overflow.\n    uint256 c = a + b\nInteger Overflow occurs if:\n    balances[_to] = 85653202831209899131921273706816539903532775246499202405936884825549521553152\n    lockedUntilTime = 0\n    balances[_from] = 44369063854674067291029404066660873444229566625561754964912869797988903417852', u'source_code/test493.sol:95:3: Warning: Integer Overflow.\n  function lockUntil(uint256 _untilTime, string _reason) onlyOwner {\r\n  ^\nSpanning multiple lines.', u'source_code/test493.sol:149:3: Warning: Integer Overflow.\n  function approveAndCall(address _spender, uint256 _value, bytes _extraData) lockAffected returns (bool success) {\r\n  ^\nSpanning multiple lines.'], 'parity_multisig_bug_2': [], 'integer_underflow': [u'source_code/test493.sol:109:3: Warning: Integer Underflow.\n  string public symbol', u'source_code/test493.sol:107:3: Warning: Integer Underflow.\n  string public standard', u'source_code/test493.sol:108:3: Warning: Integer Underflow.\n  string public name'], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '64.2'}, u'SafeMath': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '100.0'}, u'Owned': {'vulnerabilities': {'callstack': [], 'time_dependency': [], 'reentrancy': [], 'integer_overflow': [], 'parity_multisig_bug_2': [], 'integer_underflow': [], 'money_concurrency': [], 'assertion_failure': []}, 'evm_code_coverage': '99.8'}}}

