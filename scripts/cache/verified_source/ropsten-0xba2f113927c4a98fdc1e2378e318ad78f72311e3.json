{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.0;\r\n\r\n\r\n/*\r\n  AttestETH Manager\r\n  Mark Beylin\r\n  Nov 11, 2016\r\n*/\r\n\r\n\r\ncontract AttestationManager {\r\n\r\n  Contract[] public contracts;\r\n  BugBounty[] public bounties;\r\n  address public creator;\r\n\r\n  struct Attestation {\r\n    address attestor;\r\n    string attestationType;\r\n    bool agree;\r\n  }\r\n\r\n  struct Contract {\r\n    string contractHash;\r\n    string title;\r\n    address author;\r\n    address liveAddress;\r\n    Attestation[] attList;\r\n  }\r\n\r\n  struct BugBounty {\r\n    address owner;\r\n    uint amount;\r\n    string title;\r\n    Contract[] contracts;\r\n  }\r\n/*\r\n  struct personalManager {\r\n    uint attestationNum;\r\n    uint contractNum;\r\n    uint bugBountyNum;\r\n\r\n\r\n    Attestation[] personalAttestations;\r\n    Contract[] personalContracts;\r\n    BugBounty[] personalBugBounties;\r\n\r\n\r\n  }*/\r\n\r\n  /*****   Constructor   *****/\r\n\r\n  function AttestationManager () {\r\n    creator = msg.sender;\r\n  }\r\n\r\n  function addContractWithInfo(string _contractHash) returns (uint newId){\r\n    newId = contracts.length++;\r\n    Contract newContract = contracts[newId];\r\n    newContract.contractHash = _contractHash;\r\n    newContract.author = msg.sender;\r\n  }\r\n  function addBugBountyWithInfo(string _title, uint _amount) returns (uint newId){\r\n    newId = bounties.length++;\r\n    BugBounty newBugBounty = bounties[newId];\r\n    newBugBounty.amount = _amount;\r\n    newBugBounty.title = _title;\r\n    newBugBounty.owner = msg.sender;\r\n  }\r\n  function addContractToBounty (uint bountyId, uint contractId) returns (uint newId){\r\n    if (bountyId >= bounties.length || contractId >= contracts.length){\r\n      throw;\r\n    }\r\n    if (bounties[bountyId].owner != msg.sender || contracts[contractId].author != msg.sender){\r\n      throw;\r\n    }\r\n\r\n    newId = bounties[bountyId].contracts.length++;\r\n    bounties[bountyId].contracts[newId] = contracts[contractId];\r\n  }\r\n\r\n  function attestToContract(uint id, bool _attestation, string _attestationType){\r\n    if (id >= contracts.length){\r\n      throw;\r\n    }\r\n    uint newAttId = contracts[id].attList.length++;\r\n    Attestation newAtt = contracts[id].attList[newAttId];\r\n    newAtt.attestor = msg.sender;\r\n    newAtt.attestationType = _attestationType;\r\n    newAtt.agree = _attestation;\r\n  }\r\n\r\n\r\n\r\n\r\n  function getNumContracts() constant returns (uint){\r\n    return contracts.length;\r\n  }\r\n  function getNumAttForContract(uint id) constant returns (uint){\r\n    if (id >= contracts.length){\r\n      throw;\r\n    }\r\n    return contracts[id].attList.length;\r\n  }\r\n  function getAttForContractWithId(uint id, uint attId) constant returns (string){\r\n    if (id >= contracts.length){\r\n      throw;\r\n    }\r\n    if (attId >= contracts[id].attList.length){\r\n      throw;\r\n    }\r\n    return contracts[id].attList[attId].attestationType;\r\n  }\r\n\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getNumAttForContract\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contracts\",\"outputs\":[{\"name\":\"contractHash\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"author\",\"type\":\"address\"},{\"name\":\"liveAddress\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contractHash\",\"type\":\"string\"}],\"name\":\"addContractWithInfo\",\"outputs\":[{\"name\":\"newId\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"bountyId\",\"type\":\"uint256\"},{\"name\":\"contractId\",\"type\":\"uint256\"}],\"name\":\"addContractToBounty\",\"outputs\":[{\"name\":\"newId\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_title\",\"type\":\"string\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addBugBountyWithInfo\",\"outputs\":[{\"name\":\"newId\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"attId\",\"type\":\"uint256\"}],\"name\":\"getAttForContractWithId\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNumContracts\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bounties\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"title\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"_attestation\",\"type\":\"bool\"},{\"name\":\"_attestationType\",\"type\":\"string\"}],\"name\":\"attestToContract\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"type\":\"constructor\"}]", "ContractName": "AttestationManager", "CompilerVersion": "v0.4.4+commit.4633f3de", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}