{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.2;\r\n\r\ncontract VerifySig {\r\n    \r\n    function check(bytes32 data, uint8 v, bytes32 r, bytes32 s) constant returns(address) \r\n    {\r\n      return ecrecover(data, v, r, s);\r\n    }\r\n    \r\n    function checkSig(bytes32 hash, bytes sig) constant returns(address) \r\n    {\r\n        //https://gitter.im/ethereum/solidity/archives/2016/12/14\r\n        \r\n        uint8   v;\r\n        bytes32 r;\r\n        bytes32 s;\r\n        //uint8 sigLen;\r\n        \r\n        assembly {\r\n        //    sigLen := and(mload(add(sig, 0)), 255)\r\n            r := mload(add(sig, 32))\r\n            s := mload(add(sig, 64))\r\n            v := and(mload(add(sig, 65)), 255)\r\n        }\r\n    \r\n        // toleration for old ethereum, we might not need this\r\n        if (v < 27)\r\n            v += 27;\r\n    \r\n        return ecrecover(hash, v, r, s) ;\r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"checkSig\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"data\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"check\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"}]", "ContractName": "VerifySig", "CompilerVersion": "v0.4.8+commit.60cc1668", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://5f5b849002ab1bec16135b99cdead7ea8897016a73ed318f8ac4099f4d719d37"}]}