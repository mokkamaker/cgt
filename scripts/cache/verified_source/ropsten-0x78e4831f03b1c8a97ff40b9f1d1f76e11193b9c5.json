{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.25;\r\n\r\n\r\n/*////////////////////////////////////////////////////////\r\n______  ___  ______  ___  ___  ________ _   _ _   _ _____ \r\n| ___ \\/ _ \\ | ___ \\/ _ \\ |  \\/  |  _  | | | | \\ | |_   _|\r\n| |_/ / /_\\ \\| |_/ / /_\\ \\| .  . | | | | | | |  \\| | | |  \r\n|  __/|  _  ||    /|  _  || |\\/| | | | | | | | . ` | | |  \r\n| |   | | | || |\\ \\| | | || |  | \\ \\_/ / |_| | |\\  | | |  \r\n\\_|   \\_| |_/\\_| \\_\\_| |_/\\_|  |_/\\___/ \\___/\\_| \\_/ \\_/  \r\n\r\nv 0.6\r\n\r\n////////////////////////////////////////////////////////*/\r\n\r\n\r\ncontract Paramount {\r\n    address owner;\r\n    address lastBidder;\r\n    uint lastBidBlock;\r\n    uint decimals = 18;\r\n    uint minBid = 10 ** decimals / 100;\r\n    uint currentBid = minBid;\r\n    uint blocksDelta = 240;\r\n    \r\n    \r\n    constructor () public {\r\n        owner = msg.sender;\r\n        lastBidder = owner;\r\n        lastBidBlock = block.number;\r\n    }\r\n    \r\n    \r\n    function () external payable {\r\n        if (lastBidBlock + blocksDelta <= block.number) {\r\n            lastBidder.transfer(address(this).balance);\r\n            currentBid = minBid;\r\n            lastBidBlock = block.number;\r\n            lastBidder = msg.sender;\r\n        } else if (msg.value >= currentBid) {\r\n            owner.transfer(msg.value / 20);\r\n            lastBidder = msg.sender;\r\n            lastBidBlock = block.number;\r\n            currentBid = currentBid + minBid;\r\n        } else {\r\n            owner.transfer(msg.value);\r\n        }\r\n    }\r\n    \r\n    function getLastBidder () public view returns (address) {\r\n        return lastBidder;\r\n    }\r\n    \r\n    function getCurrentBid () public view returns (uint) {\r\n        return currentBid;\r\n    }\r\n    \r\n    function blocksUntilWin () public view returns (uint) {\r\n        if (lastBidBlock + blocksDelta > block.number) {\r\n            return lastBidBlock + blocksDelta - block.number;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n    \r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"getLastBidder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentBid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"blocksUntilWin\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]", "ContractName": "Paramount", "CompilerVersion": "v0.4.25+commit.59dbf8f1", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://79ae7a43ac4b0ecf971a85275a08b7d00ea522ff6173d099669452ca26817d7e"}]}