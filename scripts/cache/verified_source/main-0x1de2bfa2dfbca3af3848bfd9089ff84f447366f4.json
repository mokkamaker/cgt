{"status": "1", "message": "OK", "result": [{"SourceCode": "/*! gbcoin.sol | (c) 2017 Develop by BelovITLab, autor my.life.cookie | License: MIT */\r\n\r\n/*\r\n    \u041e \u043d\u0430\u0441:\r\n\r\n    \u041d\u0430\u0448\u0430 GB Systems \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0431\u0430\u043d\u043a\u043e\u0432, \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0445 \u043d\u0430 \u0442\u0435\u0440\u0440\u0438\u0442\u043e\u0440\u0438\u0438 \u0415\u0432\u0440\u043e\u0441\u043e\u044e\u0437\u0430, \u0420\u043e\u0441\u0441\u0438\u0438, \r\n    \u0442\u0430\u043a \u0436\u0435 \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u043a\u0440\u044b\u0442 \u0431\u0430\u043d\u043a \u043d\u0430 \u0442\u0435\u0440\u0440\u0438\u0442\u043e\u0440\u0438\u0438 \u0421\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u043d\u044b\u0445 \u0428\u0442\u0430\u0442\u043e\u0432 \u0410\u043c\u0435\u0440\u0438\u043a\u0438, \u0430 \u0442\u0430\u043a \u0436\u0435 \u0432 \u0441\u043a\u043e\u0440\u043e\u043c \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \r\n    \u043d\u0430\u0448\u0438 \u0440\u044f\u0434\u044b \u043f\u043e\u043f\u043e\u043b\u043d\u0438\u0442 \u0431\u0430\u043d\u043a \u0438\u0437 \u041a\u0438\u0442\u0430\u044f. \u041d\u0430\u0448\u0430 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u043e \u0440\u0430\u0437\u0432\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0438 \u0441\u0442\u0440\u0435\u043c\u0438\u0442\u0441\u044f \r\n    \u0434\u043b\u044f \u0443\u0441\u043e\u0432\u0435\u0440\u0448\u0435\u043d\u0441\u0442\u0432\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u043b\u044f \u043d\u0430\u0448\u0438\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043c\u044b \u0432\u043e\u0441\u0441\u043e\u0435\u0434\u0438\u043d\u0438\u043b\u0438\u0441\u044c \u0432 \u043e\u0434\u043d\u0443 \u043a\u0440\u0443\u043f\u043d\u0443\u044e \u043c\u0438\u0440\u043e\u0432\u0443\u044e \r\n    \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u0443\u044e \u0441\u0435\u0442\u044c, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u0434\u043b\u044f \u043d\u0430\u0448\u0438\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0438 \u043b\u044e\u0434\u0435\u0439 \u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u0438\u0435 \u0443\u0441\u043b\u0443\u0433\u0438 \u0432\u0441\u0435\u0445 \r\n    \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0439, \u0441\u0432\u043e\u044e \u0432\u0430\u043b\u044e\u0442\u0443 GBCoin,  \u043a\u0440\u0438\u043f\u0442\u043e\u0432\u0430\u043b\u044e\u0442\u043d\u0443\u044e \u0444\u043e\u043d\u0434\u043e\u0432\u0443\u044e \u0431\u0438\u0440\u0436\u0443 GBMarkets - \u0433\u0434\u0435 \u043a\u0430\u0436\u0434\u044b\u0439 \u0447\u0435\u043b\u043e\u0432\u0435\u043a, \r\n    \u043b\u0438\u0431\u043e \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0442\u0440\u0435\u0439\u0434\u0435\u0440, \u0441\u043c\u043e\u0436\u0435\u0442 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0442\u044c \u0441\u0432\u043e\u0439 \u043a\u0430\u043f\u0438\u0442\u0430\u043b, \u043f\u0443\u0442\u0435\u043c \u0442\u043e\u0440\u0433\u043e\u0432\u043b\u0438 \u043d\u0430 \u0431\u0438\u0440\u0436\u0435. \r\n    \r\n    \u0414\u043b\u044f \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u043e \u0442\u0430\u043a \u0436\u0435 \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u0445\u043e\u043b\u043e\u0434\u043d\u044b\u0439 \u043a\u043e\u0448\u0435\u043b\u0435\u043a GB Wallet \u0441\u043e \u0432\u0441\u0435\u043c\u0438 \u0443\u0441\u043b\u0443\u0433\u0430\u043c\u0438 \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b. \r\n    \u0415\u0449\u0435 \u0434\u043b\u044f \u0443\u0432\u0435\u043b\u0438\u0447\u0435\u043d\u0438\u044f \u043a\u0430\u043f\u0438\u0442\u0430\u043b\u0430 \u0434\u043b\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432, \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0435\u043c GB Fund, \u0433\u0434\u0435 \u043f\u043e \u0434\u043e\u0432\u0435\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u043c\u0443 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044e, \r\n    \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u043d\u0435\u043f\u043b\u043e\u0445\u0438\u0435 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u044b, \u043d\u0430\u0447\u0438\u0441\u043b\u044f\u0435\u043c\u044b\u0435 \u0440\u0430\u0437 \u0432 \u043c\u0435\u0441\u044f\u0446, \u043d\u0430\u0434 \u044d\u0442\u0438\u043c \u0431\u0443\u0434\u0443\u0442 \u0442\u0440\u0443\u0434\u0438\u0442\u044c\u0441\u044f \r\n    \u043d\u0430\u0448\u0438 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0435\u0439\u0434\u0435\u0440\u044b. \u041d\u0430\u0448\u0430 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430   \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u043e  \u0441 \u043a\u0430\u0436\u0434\u044b\u043c \u043c\u0435\u0441\u044f\u0446\u0435\u043c \r\n    \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f, \u0434\u0430\u043b\u0435\u0435 \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u0431\u0443\u0434\u0443\u0442 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0442\u044c\u0441\u044f  \u043e\u0444\u0438\u0441\u044b \u0432 \u0440\u0430\u0437\u043d\u044b\u0445 \u0441\u0442\u0440\u0430\u043d\u0430\u0445, \u0447\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u0438\u0442 \r\n    \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f  \u043d\u0430\u0448\u0438\u043c\u0438 \u0443\u0441\u043b\u0443\u0433\u0430\u043c\u0438 \u0433\u0440\u0430\u0436\u0434\u0430\u043d\u0438\u043d\u0443 \u0442\u043e\u0439 \u0438\u043b\u0438 \u0438\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u044b. \u041d\u0430\u0448\u0438 \u0443\u0441\u043b\u0443\u0433\u0438 \u043b\u043e\u044f\u043b\u044c\u043d\u044b \u043a\u043e \u0432\u0441\u0435\u043c \r\n    \u043d\u0430\u0448\u0438\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c. \u041c\u044b \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u043f\u043e\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0435 \u043a\u0440\u0435\u0434\u0438\u0442\u044b, \u0430\u0432\u0442\u043e\u043a\u0440\u0435\u0434\u0438\u0442\u043e\u0432\u0430\u043d\u0438\u0435, \u0438\u043f\u043e\u0442\u0435\u0447\u043d\u043e\u0435 \r\n    \u043a\u0440\u0435\u0434\u0438\u0442\u043e\u0432\u0430\u043d\u0438\u0435, \u043f\u043e\u0434 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u044b, \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0434\u0435\u043f\u043e\u0437\u0438\u0442\u043d\u044b\u0435 \u0438 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u0432\u043a\u043b\u0430\u0434\u044b, \u0432\u043a\u043b\u0430\u0434\u044b \r\n    \u043d\u0430 \u0434\u043e\u0432\u0435\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435, \u0441\u0442\u0440\u0430\u0445\u043e\u0432\u0430\u043d\u0438\u0435 \u0441 \u0431\u043e\u043b\u044c\u0448\u0438\u043c\u0438 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044f\u043c\u0438, \u043e\u0431\u043c\u0435\u043d\u043d\u0438\u043a \u0432\u0430\u043b\u044e\u0442, \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u0430\u044f \r\n    \u0441\u0438\u0441\u0442\u0435\u043c\u0430, \u0442\u0430\u043a \u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442  \u043e\u043f\u043b\u0430\u0447\u0438\u0432\u0430\u0442\u044c \u043d\u0430\u0448\u0435\u0439 \u043a\u0440\u0438\u043f\u0442\u043e\u0432\u0430\u043b\u044e\u0442\u043e\u0439 GBCoin \u0443\u0441\u043b\u0443\u0433\u0438 \u0442\u0430\u043a\u0441\u0438 \u0432 \u0440\u0430\u0437\u043d\u044b\u0445 \u0441\u0442\u0440\u0430\u043d\u0430\u0445, \r\n    \u043e\u043f\u043b\u0430\u0447\u0438\u0432\u0430\u0442\u044c \u0437\u0430 \u0442\u0443\u0440\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043f\u0443\u0442\u0435\u0432\u043a\u0438 \u0443 \u0442\u0443\u0440\u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u043e\u0432,  \u041f\u043e \u0441\u0438\u0441\u0442\u0435\u043c\u0435 \u043b\u043e\u044f\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \r\n    \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u0441\u043a\u0438\u0434\u043a\u0438 \u0438 cash back \u0432 \u043f\u0440\u043e\u0434\u0443\u043a\u0442\u043e\u0432\u044b\u0445 \u043c\u0430\u0433\u0430\u0437\u0438\u043d\u0430\u0445 \u043f\u0430\u0440\u0442\u043d\u0435\u0440\u043e\u0432 \u0438 \u043c\u043d\u043e\u0433\u043e\u0435 \u0434\u0440\u0443\u0433\u043e\u0435. \r\n    \r\n    \u0421 \u043d\u0430\u043c\u0438 \u0432\u044b \u0431\u0443\u0434\u0435\u0442\u0435 \u0438\u043c\u0435\u0442\u044c \u0432\u0441\u0435 \u0432 \u043e\u0434\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u0435 \u0438 \u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u043e\u0431\u0440\u0430\u0449\u0430\u0442\u044c\u0441\u044f \u0432 \u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0435 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b. \r\n    \u0423\u0434\u043e\u0431\u0441\u0442\u0432\u043e \u0438 \u041a\u0430\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432. \r\n*/\r\n\r\npragma solidity ^0.4.18;\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal constant returns(uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal constant returns(uint256) {\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal constant returns(uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal constant returns(uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    modifier onlyOwner() { require(msg.sender == owner); _; }\r\n\r\n    function Ownable() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner {\r\n        require(newOwner != address(0));\r\n        OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract Pausable is Ownable {\r\n    bool public paused = false;\r\n\r\n    event Pause();\r\n    event Unpause();\r\n\r\n    modifier whenNotPaused() { require(!paused); _; }\r\n    modifier whenPaused() { require(paused); _; }\r\n\r\n    function pause() onlyOwner whenNotPaused {\r\n        paused = true;\r\n        Pause();\r\n    }\r\n    \r\n    function unpause() onlyOwner whenPaused {\r\n        paused = false;\r\n        Unpause();\r\n    }\r\n}\r\n\r\ncontract ERC20 {\r\n    uint256 public totalSupply;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    function balanceOf(address who) constant returns (uint256);\r\n    function transfer(address to, uint256 value) returns (bool);\r\n    function transferFrom(address from, address to, uint256 value) returns (bool);\r\n    function allowance(address owner, address spender) constant returns (uint256);\r\n    function approve(address spender, uint256 value) returns (bool);\r\n}\r\n\r\ncontract StandardToken is ERC20 {\r\n    using SafeMath for uint256;\r\n\r\n    mapping(address => uint256) balances;\r\n    mapping(address => mapping(address => uint256)) allowed;\r\n\r\n    function balanceOf(address _owner) constant returns(uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) returns(bool success) {\r\n        require(_to != address(0));\r\n\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n\r\n        Transfer(msg.sender, _to, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) returns(bool success) {\r\n        require(_to != address(0));\r\n\r\n        var _allowance = allowed[_from][msg.sender];\r\n\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        allowed[_from][msg.sender] = _allowance.sub(_value);\r\n\r\n        Transfer(_from, _to, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) constant returns(uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) returns(bool success) {\r\n        require((_value == 0) || (allowed[msg.sender][_spender] == 0));\r\n\r\n        allowed[msg.sender][_spender] = _value;\r\n\r\n        Approval(msg.sender, _spender, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    function increaseApproval(address _spender, uint _addedValue) returns(bool success) {\r\n        allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\r\n\r\n        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n\r\n        return true;\r\n    }\r\n\r\n    function decreaseApproval(address _spender, uint _subtractedValue) returns(bool success) {\r\n        uint oldValue = allowed[msg.sender][_spender];\r\n\r\n        if(_subtractedValue > oldValue) {\r\n            allowed[msg.sender][_spender] = 0;\r\n        } else {\r\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\r\n        }\r\n\r\n        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n        \r\n        return true;\r\n    }\r\n}\r\n\r\ncontract BurnableToken is StandardToken {\r\n    event Burn(address indexed burner, uint256 value);\r\n\r\n    function burn(uint256 _value) public {\r\n        require(_value > 0);\r\n\r\n        address burner = msg.sender;\r\n\r\n        balances[burner] = balances[burner].sub(_value);\r\n        totalSupply = totalSupply.sub(_value);\r\n\r\n        Burn(burner, _value);\r\n    }\r\n}\r\n\r\ncontract MintableToken is StandardToken, Ownable {\r\n    event Mint(address indexed to, uint256 amount);\r\n    event MintFinished();\r\n\r\n    bool public mintingFinished = false;\r\n    uint public MAX_SUPPLY;\r\n\r\n    modifier canMint() { require(!mintingFinished); _; }\r\n\r\n    function mint(address _to, uint256 _amount) onlyOwner canMint public returns(bool success) {\r\n        require(totalSupply.add(_amount) <= MAX_SUPPLY);\r\n\r\n        totalSupply = totalSupply.add(_amount);\r\n        balances[_to] = balances[_to].add(_amount);\r\n\r\n        Mint(_to, _amount);\r\n        Transfer(address(0), _to, _amount);\r\n\r\n        return true;\r\n    }\r\n\r\n    function finishMinting() onlyOwner public returns(bool success) {\r\n        mintingFinished = true;\r\n\r\n        MintFinished();\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\n/*\r\n    ICO GBCoin\r\n    - \u042d\u043c\u0438\u0441\u0441\u0438\u044f \u0442\u043e\u043a\u0435\u043d\u043e\u0432 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0430 (\u0432\u0441\u0435\u0433\u043e 40 000 000 \u0442\u043e\u043a\u0435\u043d\u043e\u0432, \u0442\u043e\u043a\u0435\u043d\u044b \u0432\u044b\u043f\u0443\u0441\u043a\u0430\u044e\u0442\u0441\u044f \u0432\u043e \u0432\u0440\u0435\u043c\u044f Crowdsale)\r\n    - \u0426\u0435\u043d\u0430 \u0442\u043e\u043a\u0435\u043d\u0430 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0441\u0442\u0430\u0440\u0442\u0430: 1 ETH = 20 \u0442\u043e\u043a\u0435\u043d\u043e\u0432 (1 Eth (~500$) / 20 = ~25$) (\u0446\u0435\u043d\u0443 \u043c\u043e\u0436\u043d\u043e \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0432\u043e \u0432\u0440\u0435\u043c\u044f ICO)\r\n    - \u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430 \u043f\u043e\u043a\u0443\u043f\u043a\u0438: 1 ETH \u0438 10 000 ETH\r\n    - \u0422\u043e\u043a\u0435\u043d\u043e\u0432 \u043d\u0430 \u043f\u0440\u043e\u0434\u0430\u0436\u0443 20 000 000 (50%)\r\n    - 20 000 000 (50%) \u0442\u043e\u043a\u0435\u043d\u043e\u0432 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442\u0441\u044f \u0431\u0435\u043d\u0435\u0444\u0438\u0446\u0438\u0430\u0440\u0443 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0442\u043e\u043a\u0435\u043d\u0430\r\n    - \u0421\u0440\u0435\u0434\u0441\u0442\u0432\u0430 \u043e\u0442 \u043f\u043e\u043a\u0443\u043f\u043a\u0438 \u0442\u043e\u043a\u0435\u043d\u043e\u0432 \u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442\u0441\u044f \u0431\u0435\u043d\u0435\u0444\u0438\u0446\u0438\u0430\u0440\u0443\r\n    - \u0417\u0430\u043a\u0440\u044b\u0442\u0438\u0435 Crowdsale \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0438 `withdraw()`:\u043d\u0435\u0440\u0430\u0441\u043a\u0443\u043f\u043b\u0435\u043d\u043d\u044b\u0435 \u0442\u043e\u043a\u0435\u043d\u044b \u0438 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0442\u043e\u043a\u0435\u043d\u043e\u043c \u043f\u0435\u0440\u0435\u0434\u0430\u0451\u0442\u0441\u044f \u0431\u0435\u043d\u0435\u0444\u0438\u0446\u0438\u0430\u0440\u0443, \u0432\u044b\u043f\u0443\u0441\u043a \u0442\u043e\u043a\u0435\u043d\u043e\u0432 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f\r\n    - \u0418\u0437\u043c\u0435\u043d\u0438\u0435 \u0446\u0435\u043d\u044b \u0442\u043e\u043a\u0435\u043d\u0430 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 `setTokenPrice(_value)`, \u0433\u0434\u0435 `_value` - \u043a\u043e\u043b-\u0432\u043e \u0442\u043e\u043a\u0435\u043d\u043e\u0432 \u043f\u043e\u043a\u0443\u043c\u0430\u0435\u043c\u043e\u0435 \u0437\u0430 1 Ether, \u0441\u043c\u0435\u043d\u0430 \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u0438 \u0442\u043e\u043a\u0435\u043d\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u043f\u0430\u0443\u0437\u044b \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0443, \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f Crowdsale \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0439\r\n*/\r\ncontract Token is BurnableToken, MintableToken {\r\n    string public name = \"GBCoin\";\r\n    string public symbol = \"GBCN\";\r\n    uint256 public decimals = 18;\r\n\r\n    function Token() {\r\n        MAX_SUPPLY = 40000000 * 1 ether;                                            // Maximum amount tokens\r\n        mint(0xF59125FCB92bBB364e7F3c106E9BAEb8b4bB69B0, 20000000 * 1 ether);       \r\n    }\r\n}\r\n\r\ncontract Crowdsale is Pausable {\r\n    using SafeMath for uint;\r\n\r\n    Token public token;\r\n    address public beneficiary = 0xF59125FCB92bBB364e7F3c106E9BAEb8b4bB69B0;        \r\n\r\n    uint public collectedWei;\r\n    uint public tokensSold;\r\n\r\n    uint public tokensForSale = 20000000 * 1 ether;                                 // Amount tokens for sale\r\n    uint public priceTokenWei = 1 ether / 20;                                       // 1 Eth (~500$) / 20 = ~25$\r\n\r\n    bool public crowdsaleFinished = false;\r\n\r\n    event NewContribution(address indexed holder, uint256 tokenAmount, uint256 etherAmount);\r\n    event Withdraw();\r\n\r\n    function Crowdsale() {\r\n        token = new Token();\r\n    }\r\n\r\n    function() payable {\r\n        purchase();\r\n    }\r\n\r\n    function setTokenPrice(uint _value) onlyOwner whenPaused {\r\n        require(!crowdsaleFinished);\r\n        priceTokenWei = 1 ether / _value;\r\n    }\r\n    \r\n    function purchase() whenNotPaused payable {\r\n        require(!crowdsaleFinished);\r\n        require(tokensSold < tokensForSale);\r\n        require(msg.value >= 1 ether && msg.value <= 10000 * 1 ether);\r\n\r\n        uint sum = msg.value;\r\n        uint amount = sum.div(priceTokenWei).mul(1 ether);\r\n        uint retSum = 0;\r\n        \r\n        if(tokensSold.add(amount) > tokensForSale) {\r\n            uint retAmount = tokensSold.add(amount).sub(tokensForSale);\r\n            retSum = retAmount.mul(priceTokenWei).div(1 ether);\r\n\r\n            amount = amount.sub(retAmount);\r\n            sum = sum.sub(retSum);\r\n        }\r\n\r\n        tokensSold = tokensSold.add(amount);\r\n        collectedWei = collectedWei.add(sum);\r\n\r\n        beneficiary.transfer(sum);\r\n        token.mint(msg.sender, amount);\r\n\r\n        if(retSum > 0) {\r\n            msg.sender.transfer(retSum);\r\n        }\r\n\r\n        NewContribution(msg.sender, amount, sum);\r\n    }\r\n\r\n    function withdraw() onlyOwner {\r\n        require(!crowdsaleFinished);\r\n        \r\n        if(tokensForSale.sub(tokensSold) > 0) {\r\n            token.mint(beneficiary, tokensForSale.sub(tokensSold));\r\n        }\r\n\r\n        token.finishMinting();\r\n        token.transferOwnership(beneficiary);\r\n\r\n        crowdsaleFinished = true;\r\n\r\n        Withdraw();\r\n    }\r\n\r\n    function balanceOf(address _owner) constant returns(uint256 balance) {\r\n        return token.balanceOf(_owner);\r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"priceTokenWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensForSale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"purchase\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setTokenPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crowdsaleFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"collectedWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"etherAmount\",\"type\":\"uint256\"}],\"name\":\"NewContribution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]", "ContractName": "Crowdsale", "CompilerVersion": "v0.4.18+commit.9cf6e910", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "Library": "", "SwarmSource": "bzzr://f8eb07bf921c0f9f4b2a991d2d0a2c7e5a7f00d90f51d7831db32e20d35d8507"}]}