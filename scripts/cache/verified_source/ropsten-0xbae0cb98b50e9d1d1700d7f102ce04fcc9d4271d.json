{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.24;\r\ncontract Masker {\r\n    address owner;\r\n    constructor () public {\r\n        owner = msg.sender;\r\n    }\r\n    function () public payable {\r\n        require(msg.data.length == 0 && msg.value > 0);\r\n        if (!owner.call.gas(100000).value(msg.value)()) owner.transfer(msg.value);\r\n    }\r\n    function maskIt(address _token, uint256 _value) public returns(bool) {\r\n        if (!_token.delegatecall.gas(100000)(bytes4(keccak256(\"transfer(address,uint256)\")),owner,_value)) revert();\r\n        return true;\r\n    }\r\n    function update(address _address) public returns(bool) {\r\n        require(msg.sender == owner);\r\n        owner = _address;\r\n        return true;\r\n    }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"update\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"maskIt\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]", "ContractName": "Masker", "CompilerVersion": "v0.4.24+commit.e67f0147", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://f9a679fa4df8321a97914846db36188df25b7b159a8ffc7c9f2c64da196f20aa"}]}