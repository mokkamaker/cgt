{"status": "1", "message": "OK", "result": [{"SourceCode": "contract IElectricQueue {\r\n     \r\n        function ElectricQueue();\r\n  \r\n      //external function that gives possibility to invest in queue or concret charger\r\n        function  investInQueue(address _from , uint _charger) payable  returns(bool success);\r\n    \r\n\r\n      function   returnMoney(address _to) payable returns (bool success);\r\n}\r\n//contract\r\ncontract ProxyElectricQueue \r\n{\r\n    address public Owner = msg.sender;      \r\n    address public Manager;\r\n    IElectricQueue public ActualQueue; \r\n       function setManager(address manager) external{\r\n             if (msg.sender != Owner) return ;\r\n             Manager = manager;\r\n        }\r\n    function changeActualQueue(address actualQueueAddress){\r\n    if (msg.sender != Owner && msg.sender != Manager) return ;\r\n        ActualQueue =IElectricQueue(actualQueueAddress);\r\n    }\r\n    \r\n    function investInCharger (uint chargerId) payable  {\r\n        if(msg.value < 1 ether){\r\n            if(!msg.sender.send(msg.value))\r\n                throw;\r\n        } \r\n        ActualQueue.investInQueue.value(msg.value)(msg.sender,chargerId);\r\n    }\r\n    function returnMoney() payable{\r\n        if(msg.value < 10 finney || msg.value > 1 ether){\r\n             if(!msg.sender.send(msg.value))\r\n                throw;\r\n        }\r\n        ActualQueue.returnMoney.value(msg.value)(msg.sender);\r\n\r\n    }\r\n    function ()  payable{\r\n        if(msg.value < 1 ether){\r\n           if(!msg.sender.send(msg.value))\r\n                throw;\r\n        } \r\n        ActualQueue.investInQueue.value(msg.value)(msg.sender,0);\r\n    }\r\n    \r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"Manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"chargerId\",\"type\":\"uint256\"}],\"name\":\"investInCharger\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"returnMoney\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"actualQueueAddress\",\"type\":\"address\"}],\"name\":\"changeActualQueue\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ActualQueue\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"payable\":true,\"type\":\"fallback\"}]", "ContractName": "ProxyElectricQueue", "CompilerVersion": "v0.4.8+commit.60cc1668", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://0573f9575318954948571d3a5fe8d9feed639079d91de93dbce606eacacf4be8"}]}