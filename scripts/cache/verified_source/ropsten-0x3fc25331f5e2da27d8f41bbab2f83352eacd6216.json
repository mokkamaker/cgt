{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.2;\r\n\r\ncontract Presale {\r\n    \r\n    uint public balance = 0;\r\n    mapping (address => uint) public balances;\r\n    uint public total_balances = 0;\r\n    address factoryWallet = 0x00d1DE6Ee90D6AaF231A23E1e7748df9B1856308;\r\n    uint constant max_limit = 30 ether;\r\n    \r\n    uint start_block = 0;\r\n    uint end_block = 0;\r\n    \r\n    address public owner;\r\n    \r\n    function Presale() {\r\n\t\towner = msg.sender;\r\n\t}\r\n    \r\n\tfunction () payable {\r\n\t    if (msg.value == 0) throw;\r\n\t    //if (block.number < start_block) throw;\r\n\t    //if (block.number > end_block) throw;\r\n\t    \r\n\t    balance += msg.value;\r\n\t    balances[msg.sender] += msg.value;\r\n\t    total_balances += 1;\r\n\t    \r\n\t    if (balance > max_limit) throw;\r\n    }\r\n    \r\n    function transfer_to_factory() {\r\n        if (msg.sender != owner) throw;\r\n        //if (block.number > end_block) throw;\r\n        factoryWallet.send(balance);\r\n        balance = 0;\r\n    }\r\n    \r\n}", "ABI": "[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"total_balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"transfer_to_factory\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"}]", "ContractName": "Presale", "CompilerVersion": "v0.4.6+commit.2dabbdf0", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}