{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity 0.4.6;\r\ncontract mortal {\r\n    /* Define variable owner of the type address*/\r\n    address owner;\r\n\r\n    /* this function is executed at initialization and sets the owner of the contract */\r\n    function mortal() { owner = msg.sender; }\r\n\r\n    /* Function to recover the funds on the contract */\r\n    function kill() { if (msg.sender == owner) selfdestruct(owner); }\r\n}\r\n\r\ncontract greeter is mortal {\r\n    /* define variable greeting of the type string */\r\n    string greeting;\r\n\r\n    /* this runs when the contract is executed */\r\n    function greeter(string _greeting) public {\r\n        greeting = _greeting;\r\n    }\r\n\r\n    /* main function */\r\n    function greet() constant returns (string) {\r\n        return greeting;\r\n    }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"greet\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_greeting\",\"type\":\"string\"}],\"payable\":false,\"type\":\"constructor\"}]", "ContractName": "greeter", "CompilerVersion": "v0.4.6+commit.2dabbdf0", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000d48656c6c6f2c20576f726c642100000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}