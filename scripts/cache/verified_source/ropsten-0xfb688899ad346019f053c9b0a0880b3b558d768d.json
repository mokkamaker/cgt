{"status": "1", "message": "OK", "result": [{"SourceCode": "/* Created by Arseniy Klempner, Hudson Jameson, with the help of the Zeppelin Ethereum framework - https://openzeppelin.org/ */\r\n/* License: Apache 2.0 */\r\n\r\npragma solidity ^0.4.4;\r\n\r\ncontract ConstructBitcoinClue {\r\n\r\n  bytes32[] public answers = new bytes32[](4);\r\n  mapping (address => mapping(uint => bool)) public passed;\r\n\r\n  function ConstructBitcoinClue(bytes32 answer1, bytes32 answer2, bytes32 answer3, bytes32 answer4) {\r\n    answers[0] = answer1;\r\n    answers[1] = answer2;\r\n    answers[2] = answer3;\r\n    answers[3] = answer4;\r\n  }\r\n\r\n  function getClue1() constant external returns (string instructions) {\r\n    return \"Call setClue1(string answer) and give me the 4th word of the 3rd section of the Satoshi whitepaper.\";\r\n  }\r\n  \r\n  function getClue2() constant external returns (string instructions) {\r\n    return \"Call setClue2(string answer) and give me the block number of the first Pay to script hash (P2SH) transaction \";\r\n  }\r\n  \r\n  function getClue3() constant external returns (string instructions) {\r\n    return \"Call setClue3(string answer) and give me the BIP number of 'Segregated Witness (Consensus layer)'.\";\r\n  }\r\n  \r\n  function getClue4() constant external returns (string instructions) {\r\n    return \"Call setClue4(string answer) and give me the 'richest' Bitcoin address (Bitcoin wallet address with the most Bitcoins currently in the wallet).\";\r\n  }\r\n\r\n  function setClue1(string guess) external returns (bool) {\r\n    if(sha3(guess) == answers[0]) {\r\n      passed[msg.sender][0] = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function setClue2(string guess) external returns (bool)  {\r\n    if(sha3(guess) == answers[1]) {\r\n      passed[msg.sender][1] = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function setClue3(string guess) external returns (bool)  {\r\n    if(sha3(guess) == answers[2]) {\r\n      passed[msg.sender][2] = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function setClue4(string guess) external returns (bool)  {\r\n    if(sha3(guess) == answers[3]) {\r\n      passed[msg.sender][3] = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function checkPassed(address participant) external constant returns(bool) {\r\n    return passed[participant][0] && passed[participant][1] && passed[participant][2] && passed[participant][3];\r\n  }\r\n\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"answers\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getClue3\",\"outputs\":[{\"name\":\"instructions\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guess\",\"type\":\"string\"}],\"name\":\"setClue3\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getClue4\",\"outputs\":[{\"name\":\"instructions\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getClue1\",\"outputs\":[{\"name\":\"instructions\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"participant\",\"type\":\"address\"}],\"name\":\"checkPassed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getClue2\",\"outputs\":[{\"name\":\"instructions\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guess\",\"type\":\"string\"}],\"name\":\"setClue2\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guess\",\"type\":\"string\"}],\"name\":\"setClue4\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guess\",\"type\":\"string\"}],\"name\":\"setClue1\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"passed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"answer1\",\"type\":\"bytes32\"},{\"name\":\"answer2\",\"type\":\"bytes32\"},{\"name\":\"answer3\",\"type\":\"bytes32\"},{\"name\":\"answer4\",\"type\":\"bytes32\"}],\"payable\":false,\"type\":\"constructor\"}]", "ContractName": "ConstructBitcoinClue", "CompilerVersion": "v0.4.8+commit.60cc1668", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "9dbfd596ae442867ef71ca523061610682af8b00fc2738329422f4ad8d220b81bcdb2d97a393602799f55e22237e69ad21cf626cce13e098e729fc14b30a31a6d534ca6cd7b201fa32702a1b5b6a38881f8a63e70f9d3e1a8a953d61c652440508314a14af0597fe42438d022b4090b5b574793776f920cb7b9ad7ab30dcccff", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://f57d7b52da1cfd7027d47762ab9f1ad83b492492275bfff7b8d7516be5620cad"}]}