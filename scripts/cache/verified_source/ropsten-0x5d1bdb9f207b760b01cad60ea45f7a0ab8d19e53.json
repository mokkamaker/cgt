{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.6;\r\n\r\ncontract POI {\r\n    address ProofOfIndividuality;\r\n    mapping(address => bool) Poi;\r\n    function POI(address _proofOfIndividuality) {\r\n        ProofOfIndividuality = _proofOfIndividuality;\r\n    }\r\n    function submitUsers(address[] _verifiedUsers) external {\r\n        if(msg.sender != ProofOfIndividuality) throw;\r\n        for(uint i = 0; i < _verifiedUsers.length; i++) {\r\n            Poi[_verifiedUsers[i]] = true;\r\n        }\r\n    }\r\n    function verifyPOI(address _POIholder) public returns (bool) {\r\n        return Poi[_POIholder];\r\n    }\r\n}\r\n\r\ncontract PoiFactory {\r\n    function newPoiContract(address _proofOfIndividuality) returns (address) {\r\n        return new POI(_proofOfIndividuality);\r\n    }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"_proofOfIndividuality\",\"type\":\"address\"}],\"name\":\"newPoiContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"}]", "ContractName": "PoiFactory", "CompilerVersion": "v0.4.6+commit.2dabbdf0", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}