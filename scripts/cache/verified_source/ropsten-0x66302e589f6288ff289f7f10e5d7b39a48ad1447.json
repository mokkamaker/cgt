{"status": "1", "message": "OK", "result": [{"SourceCode": "contract MyContract {\r\n  address public owner;\r\n  function MyContract() { owner = msg.sender; }\r\n\r\n  modifier onlyOwner { if (msg.sender!=owner) throw; _;}\r\n  event paidBy (address from, uint value);\r\n  function changeOwner(address newOwner) onlyOwner {owner = newOwner;}\r\n  function() payable { paidBy(msg.sender, msg.value); }\r\n  function withdraw() onlyOwner{ bool r = owner.send(this.balance); }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"paidBy\",\"type\":\"event\"}]", "ContractName": "MyContract", "CompilerVersion": "v0.4.2+commit.af6afb04", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}