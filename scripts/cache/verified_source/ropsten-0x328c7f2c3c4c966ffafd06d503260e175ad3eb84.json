{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.23;\r\n\r\ncontract CertifiedDocuments {\r\n    address public owner;\r\n    mapping(bytes32 => subtitles) public project;\r\n    mapping(bytes32 => bytes32[]) public ISANSubArray;\r\n    mapping(bytes32 => uint256) public ArrayLength;\r\n    bytes32[] public ISANFilmArray;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier restricted() {\r\n        require (msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    function setOwner(address _owner)\r\n        restricted\r\n        public\r\n    {\r\n        owner = _owner;\r\n    }\r\n\r\n    struct subtitles {\r\n        bytes32 ISAN;\r\n        string filmName;\r\n        string contractType;\r\n        string contractHash;\r\n        string signingDate;\r\n        uint256 stripeTxNumber;\r\n    }\r\n\r\n    function createSubtitle(\r\n        bytes32 ISANfilm_,\r\n        bytes32 ISANsubtitles_,\r\n        string memory filmName_,\r\n        string memory contractType_,\r\n        string memory contractHash_,\r\n        string memory signingDate_,    \r\n        uint256 stripeTxNumber_\r\n    )\r\n    // restricted\r\n    payable\r\n    public {\r\n    // checks if project does not exist\r\n        require(project[ISANsubtitles_].ISAN == 0);\r\n        ISANFilmArray.push(ISANfilm_);\r\n        ISANSubArray[ISANfilm_].push(ISANsubtitles_);\r\n        ArrayLength[ISANfilm_] = ISANSubArray[ISANfilm_].length;\r\n        project[ISANsubtitles_].ISAN = ISANsubtitles_;\r\n        project[ISANsubtitles_].filmName = filmName_;\r\n        project[ISANsubtitles_].contractType = contractType_;\r\n        project[ISANsubtitles_].contractHash = contractHash_;\r\n        project[ISANsubtitles_].signingDate = signingDate_;\r\n        project[ISANsubtitles_].stripeTxNumber = stripeTxNumber_;\r\n        emit SubtitleCreated(ISANsubtitles_);\r\n    }\r\n        \r\n    function getSubtitleArray(\r\n        bytes32 ISANsubtitles_\r\n    )\r\n    view\r\n    public\r\n    returns (bytes32, string memory, string memory, string memory, string memory, uint256) {\r\n        return (project[ISANsubtitles_].ISAN,\r\n        project[ISANsubtitles_].filmName,\r\n        project[ISANsubtitles_].contractType,\r\n        project[ISANsubtitles_].contractHash,\r\n        project[ISANsubtitles_].signingDate,\r\n        project[ISANsubtitles_].stripeTxNumber);\r\n    }\r\n    \r\n    function getArrayLength(\r\n        bytes32 ISANfilm_\r\n    )\r\n    view\r\n    public\r\n    returns (uint) {\r\n        return ISANSubArray[ISANfilm_].length;\r\n    }\r\n\r\n    function getISANsubtitles(\r\n        bytes32 ISANfilm_\r\n    ) \r\n    view\r\n    public\r\n    returns (bytes32[] memory) {\r\n        return ISANSubArray[ISANfilm_];\r\n    }\r\n\r\n    function getFilmName(\r\n        bytes32 ISANsubtitles\r\n    ) \r\n    view\r\n    public\r\n    returns (string memory) {\r\n        return project[ISANsubtitles].filmName;\r\n    }\r\n\r\n    function getContractType(\r\n        bytes32 ISANsubtitles_\r\n    ) \r\n    view\r\n    public\r\n    returns (string memory) {\r\n        return project[ISANsubtitles_].contractType;\r\n    }\r\n\r\n    function getContractHash(\r\n        bytes32 ISANsubtitles_\r\n    ) \r\n    view\r\n    public\r\n    returns (string memory) {\r\n        return project[ISANsubtitles_].contractHash;\r\n    }\r\n\r\n    function getSigningDate(\r\n        bytes32 ISANsubtitles_\r\n    ) \r\n    view\r\n    public\r\n    returns (string memory) {\r\n        return project[ISANsubtitles_].signingDate;\r\n    }\r\n\r\n    function getStripeTxNumber(\r\n        bytes32 ISANsubtitles_\r\n    ) \r\n    view\r\n    public\r\n    returns (uint256) {\r\n        return project[ISANsubtitles_].stripeTxNumber;\r\n    }\r\n\r\n    event SubtitleCreated(bytes32 ISAN);\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[{\"name\":\"ISANsubtitles_\",\"type\":\"bytes32\"}],\"name\":\"getStripeTxNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"ArrayLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ISANfilm_\",\"type\":\"bytes32\"}],\"name\":\"getISANsubtitles\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ISANSubArray\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ISANsubtitles_\",\"type\":\"bytes32\"}],\"name\":\"getSubtitleArray\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"project\",\"outputs\":[{\"name\":\"ISAN\",\"type\":\"bytes32\"},{\"name\":\"filmName\",\"type\":\"string\"},{\"name\":\"contractType\",\"type\":\"string\"},{\"name\":\"contractHash\",\"type\":\"string\"},{\"name\":\"signingDate\",\"type\":\"string\"},{\"name\":\"stripeTxNumber\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ISANsubtitles_\",\"type\":\"bytes32\"}],\"name\":\"getSigningDate\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ISANfilm_\",\"type\":\"bytes32\"}],\"name\":\"getArrayLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ISANsubtitles\",\"type\":\"bytes32\"}],\"name\":\"getFilmName\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ISANsubtitles_\",\"type\":\"bytes32\"}],\"name\":\"getContractHash\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ISANfilm_\",\"type\":\"bytes32\"},{\"name\":\"ISANsubtitles_\",\"type\":\"bytes32\"},{\"name\":\"filmName_\",\"type\":\"string\"},{\"name\":\"contractType_\",\"type\":\"string\"},{\"name\":\"contractHash_\",\"type\":\"string\"},{\"name\":\"signingDate_\",\"type\":\"string\"},{\"name\":\"stripeTxNumber_\",\"type\":\"uint256\"}],\"name\":\"createSubtitle\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ISANsubtitles_\",\"type\":\"bytes32\"}],\"name\":\"getContractType\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ISANFilmArray\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ISAN\",\"type\":\"bytes32\"}],\"name\":\"SubtitleCreated\",\"type\":\"event\"}]", "ContractName": "CertifiedDocuments", "CompilerVersion": "v0.4.25+commit.59dbf8f1", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://de77e90e1d7bfde44963505922f126b58b4315c7dd683e9e704369abe15fb9a4"}]}