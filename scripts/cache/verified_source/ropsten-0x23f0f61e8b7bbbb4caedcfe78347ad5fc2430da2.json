{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.6;\r\n\r\n//import \"ConvertLib.sol\";\r\n\r\n// TODO : allow deletion of ratings for rating owner\r\n// TODO : captcha to avoid spamming\r\n\r\n\r\ncontract EvalBiz {\r\n\taddress public owner;\r\n\r\n\tstruct Rating {\r\n\t\taddress author;\r\n\t\tuint score;\r\n\t\tstring comments;\r\n\t}\r\n\tmapping (bytes32 => Rating[]) public ratings;\r\n\r\n\tfunction EvalBiz() {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tmodifier onlyOwner() {\r\n\t\tif(msg.sender != owner) throw; // rollback puis erreur\r\n\t\t_;\r\n    }\r\n\r\n    function sendRating(bytes32 key, uint score, string comments) public {\r\n        Rating memory r;\r\n        r.author = msg.sender;\r\n        r.score = score;\r\n        r.comments = comments;\r\n    \tratings[key].push(r);\r\n    }\r\n\r\n    /*function getRating(bytes32 key) returns(address sender, uint score, string comments) {\r\n    \treturn (ratings[key].author, ratings[key].score, ratings[key].comments);\r\n    }*/\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes32\"},{\"name\":\"score\",\"type\":\"uint256\"},{\"name\":\"comments\",\"type\":\"string\"}],\"name\":\"sendRating\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ratings\",\"outputs\":[{\"name\":\"author\",\"type\":\"address\"},{\"name\":\"score\",\"type\":\"uint256\"},{\"name\":\"comments\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"}]", "ContractName": "EvalBiz", "CompilerVersion": "v0.4.6+commit.2dabbdf0", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}