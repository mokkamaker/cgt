{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.4;\r\n\r\ncontract RentCar{\r\n\r\n    struct User{\r\n        //address enterp;\r\n        string name;\r\n        string homeaddress;\r\n        string emailid;\r\n        string passphrase;\r\n        uint balance;\r\n        bool rentedcar;\r\n        uint mobileno;\r\n        uint checkintime;\r\n        uint carno;\r\n    }\r\n    address public us;\r\n    mapping(address=> User) user;\r\n    function RentCar(){\r\n\r\n        us=msg.sender;\r\n        //user[us].enterp=us;\r\n        user[us].name=\"ABC Enterprise\";\r\n        user[us].homeaddress=\"Trivandrum\";\r\n        user[us].emailid=\"abcent@gmail.com\";\r\n        user[us].passphrase=\"abc123\";\r\n        user[us].balance=30; //welcome balance\r\n        user[us].rentedcar=false;\r\n        user[us].mobileno=9966718702;\r\n        user[us].checkintime=0;\r\n        user[us].carno=0;\r\n        //users.push(newUser);\r\n\r\n    }\r\n    uint numUser=1;\r\n    function CreateUser(address[] accounts,string _name,string _homeaddress,string _emailid,string _passphrase,uint _mobileno)payable returns (address){\r\n        us=accounts[numUser];\r\n        numUser++;\r\n        user[us].name=_name;\r\n        user[us].homeaddress=_homeaddress;\r\n        user[us].emailid=_emailid;\r\n        user[us].passphrase=_passphrase;\r\n        user[us].balance=10; //welcome balance\r\n        user[us].rentedcar=false;\r\n        user[us].mobileno=_mobileno;\r\n        user[us].checkintime=0;\r\n        user[us].carno=0;\r\n        return us;\r\n    }\r\n\r\n    function GetUserdetails(address _addr) returns (string name,uint bal,bool rentedca,uint mobno,string passw,uint chktime,uint carn){\r\n            us=_addr;\r\n            User newUser=user[us];\r\n            name=newUser.name;\r\n            bal=newUser.balance;\r\n            rentedca=newUser.rentedcar;\r\n            mobno=newUser.mobileno;\r\n            passw=newUser.passphrase;\r\n            chktime=newUser.checkintime;\r\n            carn=newUser.carno;\r\n\r\n\r\n\r\n       // return(fname,bal,rented,phno,password,checkt);\r\n\r\n    }\r\n    function ValidateLogin(uint _mobileno,address[] accounts) returns (address){\r\n      uint i;\r\n      address a;\r\n      for(i=0;i<9;i++){\r\n      a=accounts[i];\r\n        User newUser=user[a];\r\n        if(newUser.mobileno==_mobileno){\r\n\r\n          break;\r\n        }\r\n    }\r\n    return a;\r\n  }\r\n\r\n\r\n\r\n  function AddMoney(address accno,uint amount)payable {\r\n\r\n      user[accno].balance=user[accno].balance+amount;\r\n\r\n    }\r\n\r\n    function payrentnow(address acn,uint amount,address[] acs) payable{\r\n    User toUser=user[acs[0]];\r\n      User newUser=user[acn];\r\n      if(newUser.balance<amount){\r\n        return;\r\n      }\r\n\r\n        newUser.balance=newUser.balance-amount;\r\n        toUser.balance+=amount;\r\n        newUser.rentedcar=false;\r\n        newUser.checkintime=0;\r\n        newUser.carno=0;\r\n        //a=amount;\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    function booking(address acn,uint checkin,uint crno)payable returns (bool success){\r\n        User newUser=user[acn];\r\n        //newUser=users[indexofac];\r\n        if(!newUser.rentedcar){\r\n            newUser.rentedcar=true;\r\n            newUser.checkintime=checkin;\r\n            newUser.carno=crno;\r\n            success=true;\r\n        }\r\n        else{\r\n            success=false;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"us\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"acn\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"acs\",\"type\":\"address[]\"}],\"name\":\"payrentnow\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"accounts\",\"type\":\"address[]\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_homeaddress\",\"type\":\"string\"},{\"name\":\"_emailid\",\"type\":\"string\"},{\"name\":\"_passphrase\",\"type\":\"string\"},{\"name\":\"_mobileno\",\"type\":\"uint256\"}],\"name\":\"CreateUser\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"accno\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AddMoney\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"acn\",\"type\":\"address\"},{\"name\":\"checkin\",\"type\":\"uint256\"},{\"name\":\"crno\",\"type\":\"uint256\"}],\"name\":\"booking\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_mobileno\",\"type\":\"uint256\"},{\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"ValidateLogin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"GetUserdetails\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"bal\",\"type\":\"uint256\"},{\"name\":\"rentedca\",\"type\":\"bool\"},{\"name\":\"mobno\",\"type\":\"uint256\"},{\"name\":\"passw\",\"type\":\"string\"},{\"name\":\"chktime\",\"type\":\"uint256\"},{\"name\":\"carn\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"type\":\"constructor\"}]", "ContractName": "RentCar", "CompilerVersion": "v0.4.4+commit.4633f3de", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}