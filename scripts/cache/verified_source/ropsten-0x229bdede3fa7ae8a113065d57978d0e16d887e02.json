{"status": "1", "message": "OK", "result": [{"SourceCode": "contract DelegateProvider {\r\n    function getDelegate() public view returns (address delegate);\r\n}\r\n\r\ncontract DelegateProxy {\r\n  /**\r\n   * @dev Performs a delegatecall and returns whatever the delegatecall returned (entire context execution will return!)\r\n   * @param _dst Destination address to perform the delegatecall\r\n   * @param _calldata Calldata for the delegatecall\r\n   */\r\n  function delegatedFwd(address _dst, bytes _calldata) internal {\r\n    assembly {\r\n      let result := delegatecall(sub(gas, 10000), _dst, add(_calldata, 0x20), mload(_calldata), 0, 0)\r\n      let size := returndatasize\r\n\r\n      let ptr := mload(0x40)\r\n      returndatacopy(ptr, 0, size)\r\n\r\n      // revert instead of invalid() bc if the underlying call failed with invalid() it already wasted gas.\r\n      // if the call returned error data, forward it\r\n      switch result case 0 { revert(ptr, size) }\r\n      default { return(ptr, size) }\r\n    }\r\n  }\r\n}\r\n\r\ncontract WalletStorage {\r\n    address public owner;\r\n}\r\n\r\ncontract WalletProxy is WalletStorage, DelegateProxy {\r\n    event ReceivedETH(address from, uint256 amount);\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function() public payable {\r\n        if (msg.value > 0) {\r\n            emit ReceivedETH(msg.sender, msg.value);\r\n        }\r\n        if (gasleft() > 2400) {\r\n            delegatedFwd(DelegateProvider(owner).getDelegate(), msg.data);\r\n        }\r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReceivedETH\",\"type\":\"event\"}]", "ContractName": "WalletProxy", "CompilerVersion": "v0.4.23+commit.124ca40d", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://b641eb79ac6642d619896645b4fd186e82d93ca78b8f4b7b179ffa4774111c04"}]}