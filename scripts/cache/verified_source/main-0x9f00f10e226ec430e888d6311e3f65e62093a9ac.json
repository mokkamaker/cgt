{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.10;\r\n\r\ncontract Token {\r\n    uint256 public totalSupply;\r\n    function balanceOf(address _owner) constant returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\r\n    function approve(address _spender, uint256 _value) returns (bool success);\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining);\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\n\r\n/*  ERC 20 token */\r\ncontract StandardToken is Token {\r\n\r\n    function transfer(address _to, uint256 _value) returns (bool success) {\r\n      if (balances[msg.sender] >= _value && _value > 0) {\r\n        balances[msg.sender] -= _value;\r\n        balances[_to] += _value;\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\r\n      if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {\r\n        balances[_to] += _value;\r\n        balances[_from] -= _value;\r\n        allowed[_from][msg.sender] -= _value;\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    function balanceOf(address _owner) constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n      return allowed[_owner][_spender];\r\n    }\r\n\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n}\r\n\r\n\r\n// requires 133,650,000 BAT deposited here\r\ncontract BATSafe {\r\n  mapping (address => uint256) allocations;\r\n  uint256 public unlockDate;\r\n  address public BAT;\r\n  uint256 public constant exponent = 10**18;\r\n\r\n  function BATSafe(address _BAT) {\r\n    BAT = _BAT;\r\n    unlockDate = now + 6 * 30 days;\r\n    allocations[0xc504E7BF907fccc389d08A1C302d03B7baB4E5DC] = 2000000;\r\n    allocations[0x2Cb6882D101d300694918e93F18b52327AA95302] = 2000000;\r\n  }\r\n\r\n  function unlock() external {\r\n    if(now < unlockDate) throw;\r\n    uint256 entitled = allocations[msg.sender];\r\n    allocations[msg.sender] = 0;\r\n    if(!StandardToken(BAT).transfer(msg.sender, entitled * exponent)) throw;\r\n  }\r\n\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"exponent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BAT\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unlockDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unlock\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_BAT\",\"type\":\"address\"}],\"payable\":false,\"type\":\"constructor\"}]", "ContractName": "BATSafe", "CompilerVersion": "v0.4.10+commit.f0d539ae", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000000d8775f648430679a709e98d2b0cb6250d2887ef", "Library": "", "SwarmSource": "bzzr://90304daf28316bff4ddfb099f1430b927a734bee63526f7e65dd23a1c30b5dfb"}]}