{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.2;\r\n\r\ncontract MessageStore {\r\n  mapping (bytes32 => bytes32) public chainLastMessageHash;\r\n\r\n  event NewChain(bytes32 chainID);\r\n  event Message(bytes32 indexed chainID, bytes message); \r\n\r\n  bytes32 public chainIDSeed;\r\n  \r\n  function MessageStore() {\r\n    chainIDSeed = sha256(this);\r\n  }\r\n\r\n  function createNewChain (bytes message) {\r\n    if (message.length <= 32) throw;\r\n    for (uint i = 0; i < 32; ++i) {\r\n      if (message[i] != chainIDSeed[i])\r\n        throw;\r\n    }\r\n    bytes32 chainID = sha256(message);\r\n    chainLastMessageHash[chainID] = chainID;\r\n    chainIDSeed = chainID;\r\n    NewChain(chainID);\r\n    Message(chainID, message);    \r\n  }\r\n  \r\n  function postMessage(bytes32 chainID, bytes message)  {\r\n    if (message.length <= 32)\r\n      throw; // message is too short\r\n    bytes32 lastMessageHash = chainLastMessageHash[chainID];\r\n    if (lastMessageHash == bytes32(0))\r\n      throw; // chain not initialize\r\n    for (uint i = 0; i < 32; ++i) {\r\n      if (lastMessageHash[i] != message[i])\r\n        throw; //prev message hash mismatch\r\n    }\r\n    bytes32 messageHash = sha256(message);\r\n    chainLastMessageHash[chainID] = messageHash;      \r\n    Message(chainID, message);\r\n  }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"chainLastMessageHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"chainID\",\"type\":\"bytes32\"},{\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"postMessage\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"createNewChain\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"chainIDSeed\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"chainID\",\"type\":\"bytes32\"}],\"name\":\"NewChain\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"chainID\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"Message\",\"type\":\"event\"}]", "ContractName": "MessageStore", "CompilerVersion": "v0.4.4+commit.4633f3de", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}