{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.18;\r\n\r\ncontract Reentrance {\r\n\r\n    mapping(address => uint) public balances;\r\n\r\n    function donate(address _to) public payable {\r\n        balances[_to] += msg.value;\r\n    }\r\n\r\n    function balanceOf(address _who) public view returns (uint balance) {\r\n        return balances[_who];\r\n    }\r\n\r\n    function withdraw(uint _amount) public {\r\n        if (balances[msg.sender] >= _amount) {\r\n            if (msg.sender.call.value(_amount)()) {\r\n                _amount;\r\n            }\r\n            balances[msg.sender] -= _amount;\r\n        }\r\n    }\r\n\r\n    function() public payable {}\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"donate\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]", "ContractName": "Reentrance", "CompilerVersion": "v0.4.25+commit.59dbf8f1", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://6aba4c07e52b5bd5eeb1ff51c0f8b7c2adee0e096bee4b554a203019d03827e6"}]}