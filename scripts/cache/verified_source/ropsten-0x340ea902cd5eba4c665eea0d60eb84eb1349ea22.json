{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.0;\r\ncontract SoapBox {\r\n// Our 'dict' of addresses that are approved to share opinions   \r\n//\u6211\u4eec\u6279\u51c6\u5206\u4eab\u610f\u89c1\u7684\u5730\u5740\u7684\u201c\u5b57\u5178\u201d \r\n    mapping (address => bool) approvedSoapboxer;\r\n    string opinion;\r\n     \r\n    // Our event to announce an opinion on the blockchain  \r\n\t//\u6211\u4eec\u7684\u4e8b\u4ef6\u53d1\u5e03\u5bf9\u533a\u5757\u94fe\u7684\u610f\u89c1 \r\n \r\n    event OpinionBroadcast(address _soapboxer, string _opinion);\r\n// This is a constructor function, so its name has to match the contract   \r\n//\u8fd9\u662f\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u6240\u4ee5\u5b83\u7684\u540d\u5b57\u5fc5\u987b\u4e0e\u5408\u7ea6\u76f8\u5339\u914d \r\n\r\n    function SoapBox() public {\r\n    }\r\n    \r\n    // Because this function is 'payable' it will be called when ether is sent to the contract address.\r\n\t//\u56e0\u4e3a\u8fd9\u4e2a\u51fd\u6570\u662f\u201c\u652f\u4ed8\u201d\uff0c\u6240\u4ee5\u5f53\u4ee5\u592a\u7f51\u88ab\u53d1\u9001\u5230\u5408\u7ea6\u5730\u5740\u65f6\u5c06\u88ab\u8c03\u7528\u3002 \r\n    function() public payable{\r\n        // msg is a special variable that contains information about the transaction\r\n\t\t// msg\u662f\u4e00\u4e2a\u7279\u6b8a\u53d8\u91cf\uff0c\u5305\u542b\u6709\u5173\u4ea4\u6613\u7684\u4fe1\u606f \r\n        if (msg.value > 20000000000000000) {  \r\n            //if the value sent greater than 0.02 ether (in Wei)\r\n\t\t\t//\u5982\u679c\u53d1\u9001\u7684\u503c\u5927\u4e8e0.02 ether\uff08\u5728Wei\u4e2d\uff09 \r\n            // then add the sender's address to approvedSoapboxer \r\n\t\t\t//\u7136\u540e\u5c06\u53d1\u4ef6\u4eba\u7684\u5730\u5740\u6dfb\u52a0\u5230approvedSoapboxer \r\n            approvedSoapboxer[msg.sender] =  true;\r\n        }\r\n    }\r\n    \r\n    \r\n    // Our read-only function that checks whether the specified address is approved to post opinions.\r\n\t//\u6211\u4eec\u7684\u53ea\u8bfb\u51fd\u6570\uff0c\u7528\u4e8e\u68c0\u67e5\u6307\u5b9a\u5730\u5740\u662f\u5426\u88ab\u6279\u51c6\u53d1\u5e03\u610f\u89c1\u3002 \r\n    function isApproved(address _soapboxer) public view returns (bool approved) {\r\n        return approvedSoapboxer[_soapboxer];\r\n    } \r\n    \r\n    // Read-only function that returns the current opinion\r\n\t//\u8fd4\u56de\u5f53\u524d\u610f\u89c1\u7684\u53ea\u8bfb\u51fd\u6570 \r\n    function getCurrentOpinion() public view returns(string) {\r\n        return opinion;\r\n    }\r\n//Our function that modifies the state on the blockchain\r\n  //\u6211\u4eec\u7684\u51fd\u6570\u4fee\u6539\u4e86\u533a\u5757\u94fe\u4e0a\u7684\u72b6\u6001 \r\n    function broadcastOpinion(string _opinion) public returns (bool success) {\r\n        // Looking up the address of the sender will return false if the sender isn't approved\r\n\t\t//\u5982\u679c\u53d1\u4ef6\u4eba\u672a\u83b7\u6279\u51c6\uff0c\u67e5\u627e\u53d1\u4ef6\u4eba\u7684\u5730\u5740\u5c06\u8fd4\u56defalse \r\n        if (approvedSoapboxer[msg.sender]) {\r\n            \r\n            opinion = _opinion;\r\n            emit OpinionBroadcast(msg.sender, opinion);\r\n            return true;\r\n            \r\n        } else {\r\n            return false;\r\n        }\r\n        \r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentOpinion\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_soapboxer\",\"type\":\"address\"}],\"name\":\"isApproved\",\"outputs\":[{\"name\":\"approved\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_opinion\",\"type\":\"string\"}],\"name\":\"broadcastOpinion\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_soapboxer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_opinion\",\"type\":\"string\"}],\"name\":\"OpinionBroadcast\",\"type\":\"event\"}]", "ContractName": "SoapBox", "CompilerVersion": "v0.4.26+commit.4563c3fc", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://02eb7c24ec578af3055079e9ab3a87139620104c878ddf4a5d8608dcd987ba50"}]}