{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.2;\r\n\r\ncontract IDCaseA{\r\n    address public owner;\r\n    bytes32 private privateKey;\r\n    \r\n    function IDCaseA(bytes32 myKey){\r\n        owner = msg.sender;\r\n        privateKey = myKey;\r\n    }\r\n    \r\n    function getKey() public returns (bytes32){\r\n        if (msg.sender == owner){\r\n            return privateKey;\r\n        }\r\n        else{\r\n            throw;\r\n        }\r\n    }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[],\"name\":\"getKey\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"myKey\",\"type\":\"bytes32\"}],\"type\":\"constructor\"}]", "ContractName": "IDCaseA", "CompilerVersion": "v0.4.2+commit.af6afb04", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "1234500000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}