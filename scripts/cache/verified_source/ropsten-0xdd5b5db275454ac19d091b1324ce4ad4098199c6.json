{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.24;\r\n\r\n/**\r\n * Contrato inteligente donde crearemos un tipo apuesta de equipos\r\n * author: Miguel Lomeli\r\n * email: miguel_AT_lomeli.io\r\n * version: 23/06/2018\r\n */\r\n\r\n\r\ncontract Apuestas2018 {\r\n\r\n\r\n\r\n\r\n\r\n\r\n    struct Team{\r\n        uint256 slug;\r\n        string name;\r\n        uint256 goals;\r\n        uint256 played;\r\n        uint256 date;\r\n        bool status;\r\n    }\r\n\r\n    struct Competitor{\r\n        address user;\r\n        uint256 team;\r\n        uint256 value;\r\n        uint256 date;\r\n        bool statusPay;\r\n        bool statusTeam;\r\n    }\r\n\r\n\r\n    address public owner;\r\n    address public API;\r\n    uint256 public EntryPrice;\r\n    bool public stopped = false;\r\n    mapping (address => Competitor) public Competitors;\r\n    mapping (uint256 => Team) public Teams;\r\n    uint256[] public teams;\r\n    address[] public competitors;\r\n\r\n\r\n\r\n    constructor() public{\r\n        owner = msg.sender;\r\n        API = msg.sender;\r\n    }\r\n\r\n\r\n    modifier onlyOwner{\r\n        require(owner == msg.sender);\r\n        _;\r\n    }\r\n\r\n\r\n    modifier onlyAPI{\r\n        require(API == msg.sender);\r\n        _;\r\n    }\r\n\r\n\r\n    modifier isRunning {\r\n        require(!stopped);\r\n        _;\r\n    }\r\n\r\n    modifier validAddress {\r\n        require(0x0 != msg.sender);\r\n        _;\r\n    }\r\n\r\n    function stop() onlyOwner public {\r\n        stopped = true;\r\n    }\r\n\r\n\r\n    function start() onlyOwner public {\r\n        stopped = false;\r\n    }\r\n\r\n\r\n    function setPrice(uint256 _EntryPrice) onlyOwner isRunning public returns (bool success){\r\n        EntryPrice = _EntryPrice;\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n    function setAPI(address _API) onlyOwner isRunning public returns (bool success){\r\n        API = _API;\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    function setTeam(uint256 _slug , string _name) onlyOwner isRunning public returns (bool success){\r\n        Teams[_slug].slug = _slug;\r\n        Teams[_slug].name = _name;\r\n        Teams[_slug].goals = 0;\r\n        Teams[_slug].played = 0;\r\n        Teams[_slug].status = true;\r\n        Teams[_slug].date = now;\r\n        teams.push(_slug);\r\n        emit TeamEvent(_slug, _name, now);\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n    function () payable isRunning validAddress public {\r\n        require(owner != msg.sender);\r\n        uint256 value = msg.value;\r\n        if( value >= EntryPrice ){\r\n            Competitors[msg.sender].user = msg.sender;\r\n            Competitors[msg.sender].value = value;\r\n            Competitors[msg.sender].statusPay = true;\r\n            Competitors[msg.sender].date = now;\r\n            competitors.push(msg.sender);\r\n            emit CompetitorEvent(msg.sender, value, now);\r\n        } else {\r\n            revert();\r\n        }\r\n    }\r\n\r\n\r\n    function competitorExists() internal view returns(bool) {\r\n        return Competitors[msg.sender].statusPay;\r\n    }\r\n\r\n\r\n    function competitorTeam(uint256 _slug) isRunning validAddress public returns (bool success){\r\n        require(competitorExists());\r\n        Competitors[msg.sender].team = _slug;\r\n        Competitors[msg.sender].statusTeam = true;\r\n        emit CompetitorTeamEvent(msg.sender, _slug, now);\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n    function competitorPAY(uint256 _slug) payable isRunning validAddress public {\r\n        require(owner != msg.sender);\r\n        uint256 value = msg.value;\r\n        if( value >= EntryPrice ){\r\n            Competitors[msg.sender].user = msg.sender;\r\n            Competitors[msg.sender].value = value;\r\n            Competitors[msg.sender].statusPay = true;\r\n            Competitors[msg.sender].team = _slug;\r\n            Competitors[msg.sender].statusTeam = true;\r\n            Competitors[msg.sender].date = now;\r\n            competitors.push(msg.sender);\r\n            emit CompetitorEvent(msg.sender, value, now);\r\n            emit CompetitorTeamEvent(msg.sender, _slug, now);\r\n        } else {\r\n            revert();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function getBalance() view public returns (uint256 balance){\r\n        return address(0x0).balance;\r\n    }\r\n\r\n    function listCompetitors() external view returns(address[]){\r\n        return competitors;\r\n    }\r\n\r\n    function listTeams() external view returns(uint256[]){\r\n        return teams;\r\n    }\r\n\r\n\r\n\r\n\r\n    event TeamEvent(uint256 _slug, string _name, uint256 _date);\r\n    event CompetitorEvent(address _user, uint256 _value, uint256 _date);\r\n    event CompetitorTeamEvent(address _user, uint256 _team, uint256 _date);\r\n\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"listTeams\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_slug\",\"type\":\"uint256\"}],\"name\":\"competitorTeam\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"Competitors\",\"outputs\":[{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"team\",\"type\":\"uint256\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"date\",\"type\":\"uint256\"},{\"name\":\"statusPay\",\"type\":\"bool\"},{\"name\":\"statusTeam\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Teams\",\"outputs\":[{\"name\":\"slug\",\"type\":\"uint256\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"goals\",\"type\":\"uint256\"},{\"name\":\"played\",\"type\":\"uint256\"},{\"name\":\"date\",\"type\":\"uint256\"},{\"name\":\"status\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"teams\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_slug\",\"type\":\"uint256\"}],\"name\":\"competitorPAY\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"API\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_EntryPrice\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"competitors\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_slug\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"setTeam\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_API\",\"type\":\"address\"}],\"name\":\"setAPI\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"listCompetitors\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"EntryPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_slug\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"TeamEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"CompetitorEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_team\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"CompetitorTeamEvent\",\"type\":\"event\"}]", "ContractName": "Apuestas2018", "CompilerVersion": "v0.4.24+commit.e67f0147", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://4bdfadeb112e9552d5ee49ee411e840377e04c9c3ccbe31d52d32dd506b6e07c"}]}