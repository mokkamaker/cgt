{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.6;\r\n\r\ncontract Owned {\r\n    address public contractOwner;\r\n    address public pendingContractOwner;\r\n\r\n    function Owned() {\r\n        contractOwner = msg.sender;\r\n    }\r\n\r\n    modifier onlyContractOwner() {\r\n        if (contractOwner == msg.sender) {\r\n            _;\r\n        }\r\n    }\r\n\r\n    function changeContractOwnership(address _to) onlyContractOwner() returns(bool) {\r\n        pendingContractOwner = _to;\r\n        return true;\r\n    }\r\n\r\n    function claimContractOwnership() returns(bool) {\r\n        if (pendingContractOwner != msg.sender) {\r\n            return false;\r\n        }\r\n        contractOwner = pendingContractOwner;\r\n        delete pendingContractOwner;\r\n        return true;\r\n    }\r\n}\r\n\r\ncontract Ballot is Owned{\r\n  struct Poll {\r\n    bytes32 questionID;\r\n    string questionTitle;\r\n    string questionText;\r\n    DVote[] votes;\r\n  }\r\n\r\n  struct DVote {\r\n    address deputeeAddress;\r\n    bytes32 deputeeID;\r\n    string deputyName;\r\n    string vote;\r\n  }\r\n\r\n  mapping(bytes32 => Poll) polls;\r\n\r\n  event VoteAccepted(address deputeeAddress, bytes32 questionID, bytes32 deputeeID, string vote);\r\n\r\n\r\n  function vote(bytes32 questionID, bytes32 deputeeID, string deputyName, string questionTitle, string questionText, string voteResult) returns(bool success){\r\n    if(polls[questionID].questionID == 0){\r\n        polls[questionID].questionID =  questionID;\r\n        polls[questionID].questionTitle = questionTitle;\r\n        polls[questionID].questionText = questionText;\r\n    }\r\n\r\n    polls[questionID].votes.push(DVote(msg.sender, deputeeID, deputyName, voteResult));\r\n\r\n    VoteAccepted(msg.sender, questionID, deputeeID, voteResult);\r\n    return true;\r\n  }\r\n\r\n  function getPoll(bytes32 _id) constant returns(bytes32 questionID, string questionTitle, string questionText, uint votesAmt) {\r\n      var poll = polls[_id];\r\n      return (\r\n          poll.questionID,\r\n          poll.questionTitle,\r\n          poll.questionText,\r\n          poll.votes.length\r\n      );\r\n  }\r\n  \r\n    function getPollVote(bytes32 _id, uint voteId) constant returns( address deputeeAddress,bytes32 deputeeID,string deputyName, string vote) {\r\n            var poll = polls[_id];\r\n            DVote vote1=poll.votes[voteId];\r\n            return (\r\n                   vote1.deputeeAddress,\r\n                   vote1.deputeeID,\r\n                   vote1.deputyName,\r\n                   vote1.vote\r\n            );\r\n        }\r\n\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"bytes32\"},{\"name\":\"voteId\",\"type\":\"uint256\"}],\"name\":\"getPollVote\",\"outputs\":[{\"name\":\"deputeeAddress\",\"type\":\"address\"},{\"name\":\"deputeeID\",\"type\":\"bytes32\"},{\"name\":\"deputyName\",\"type\":\"string\"},{\"name\":\"vote\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"questionID\",\"type\":\"bytes32\"},{\"name\":\"deputeeID\",\"type\":\"bytes32\"},{\"name\":\"deputyName\",\"type\":\"string\"},{\"name\":\"questionTitle\",\"type\":\"string\"},{\"name\":\"questionText\",\"type\":\"string\"},{\"name\":\"voteResult\",\"type\":\"string\"}],\"name\":\"vote\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"getPoll\",\"outputs\":[{\"name\":\"questionID\",\"type\":\"bytes32\"},{\"name\":\"questionTitle\",\"type\":\"string\"},{\"name\":\"questionText\",\"type\":\"string\"},{\"name\":\"votesAmt\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimContractOwnership\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"changeContractOwnership\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingContractOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"deputeeAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"questionID\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"deputeeID\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"vote\",\"type\":\"string\"}],\"name\":\"VoteAccepted\",\"type\":\"event\"}]", "ContractName": "Ballot", "CompilerVersion": "v0.4.6+commit.2dabbdf0", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}