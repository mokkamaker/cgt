{"status": "1", "message": "OK", "result": [{"SourceCode": "/*\r\n   Copyright 2016 Nexus Development, LLC\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n*/\r\n\r\npragma solidity ^0.4.2;\r\n\r\n// Token standard API\r\n// https://github.com/ethereum/EIPs/issues/20\r\n\r\ncontract ERC20Constant {\r\n    function totalSupply() constant returns (uint supply);\r\n    function balanceOf( address who ) constant returns (uint value);\r\n    function allowance(address owner, address spender) constant returns (uint _allowance);\r\n}\r\ncontract ERC20Stateful {\r\n    function transfer( address to, uint value) returns (bool ok);\r\n    function transferFrom( address from, address to, uint value) returns (bool ok);\r\n    function approve(address spender, uint value) returns (bool ok);\r\n}\r\ncontract ERC20Events {\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n    event Approval( address indexed owner, address indexed spender, uint value);\r\n}\r\ncontract ERC20 is ERC20Constant, ERC20Stateful, ERC20Events {}\r\n\r\ncontract ERC20Base is ERC20\r\n{\r\n    mapping( address => uint ) _balances;\r\n    mapping( address => mapping( address => uint ) ) _approvals;\r\n    uint _supply;\r\n    function ERC20Base( uint initial_balance ) {\r\n        _balances[msg.sender] = initial_balance;\r\n        _supply = initial_balance;\r\n    }\r\n    function totalSupply() constant returns (uint supply) {\r\n        return _supply;\r\n    }\r\n    function balanceOf( address who ) constant returns (uint value) {\r\n        return _balances[who];\r\n    }\r\n    function transfer( address to, uint value) returns (bool ok) {\r\n        if( _balances[msg.sender] < value ) {\r\n            throw;\r\n        }\r\n        if( !safeToAdd(_balances[to], value) ) {\r\n            throw;\r\n        }\r\n        _balances[msg.sender] -= value;\r\n        _balances[to] += value;\r\n        Transfer( msg.sender, to, value );\r\n        return true;\r\n    }\r\n    function transferFrom( address from, address to, uint value) returns (bool ok) {\r\n        // if you don't have enough balance, throw\r\n        if( _balances[from] < value ) {\r\n            throw;\r\n        }\r\n        // if you don't have approval, throw\r\n        if( _approvals[from][msg.sender] < value ) {\r\n            throw;\r\n        }\r\n        if( !safeToAdd(_balances[to], value) ) {\r\n            throw;\r\n        }\r\n        // transfer and return true\r\n        _approvals[from][msg.sender] -= value;\r\n        _balances[from] -= value;\r\n        _balances[to] += value;\r\n        Transfer( from, to, value );\r\n        return true;\r\n    }\r\n    function approve(address spender, uint value) returns (bool ok) {\r\n        _approvals[msg.sender][spender] = value;\r\n        Approval( msg.sender, spender, value );\r\n        return true;\r\n    }\r\n    function allowance(address owner, address spender) constant returns (uint _allowance) {\r\n        return _approvals[owner][spender];\r\n    }\r\n    function safeToAdd(uint a, uint b) internal returns (bool) {\r\n        return (a + b >= a);\r\n    }\r\n}\r\n\r\ncontract Token is ERC20Base(10000 * 10 ** 18) {\r\n    \r\n    string public name = \"PLU Test Token\";\r\n    string public symbol = \"PLU\";\r\n    uint public decimals = 18;\r\n\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"ok\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"supply\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"ok\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"ok\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"_allowance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "ContractName": "Token", "CompilerVersion": "v0.4.9+commit.364da425", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://030bcde81d5adecd9ca3a2a84aa80284ee71eb74f8d0d8221350a6bdab4f0369"}]}