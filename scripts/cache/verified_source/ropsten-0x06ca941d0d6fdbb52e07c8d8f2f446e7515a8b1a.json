{"status": "1", "message": "OK", "result": [{"SourceCode": "contract subscriptionDebitService {\r\n    \r\n  struct subscription {\r\n    address subscriber;\r\n    uint amountInWei;\r\n    uint debitFrequency;\r\n  }\r\n  \r\n  struct debitObject {\r\n    string name;\r\n    address contentCreator;\r\n    uint amountInWei;\r\n    uint debitFrequency;\r\n    uint nextDebit;\r\n  }\r\n    \r\nmapping(address => uint) public balanceOf;    \r\n    \r\nmapping(address => subscription[]) public subscriptions;\r\nmapping(address => debitObject[]) public debitObjects;\r\nmapping(address => mapping(address => uint)) public debitObjectID;\r\n\r\nfunction newDebitObject(address _contentCreator, \r\n                        uint _amountInWei, \r\n                        string _name, \r\n                        uint _debitFrequency\r\n                        ) \r\n{\r\n    debitObjects[msg.sender].push(debitObject({\r\n                                    name: _name, \r\n                                    contentCreator: _contentCreator,\r\n                                    amountInWei: _amountInWei,\r\n                                    debitFrequency: _debitFrequency,\r\n                                    nextDebit: now + _debitFrequency\r\n                                }));\r\n    subscriptions[msg.sender].push(subscription({\r\n                                    subscriber: msg.sender,\r\n                                    amountInWei: _amountInWei,\r\n                                    debitFrequency: _debitFrequency\r\n                                }));                            \r\n}\r\n\r\nfunction() payable {\r\n    balanceOf[msg.sender] += msg.value;\r\n}\r\n\r\nfunction doDebit(address _subscriber, address _contentCreator) public {\r\n        uint id = debitObjectID[_subscriber][_contentCreator];\r\n        if(id == 0) throw;\r\n        if(now < debitObjects[_subscriber][id].nextDebit) throw;\r\n        \r\n        uint amount = debitObjects[_subscriber][id].amountInWei;\r\n        if(balanceOf[_subscriber] < amount) throw;\r\n        \r\n        debitObjects[_subscriber][id].nextDebit += debitObjects[_subscriber][id].debitFrequency; \r\n        balanceOf[_subscriber] -= amount;\r\n        balanceOf[_contentCreator] += amount;\r\n}\r\n\r\nfunction withdraw(uint _amount) {\r\n    if(balanceOf[msg.sender] < _amount) throw;\r\n    balanceOf[msg.sender] -= _amount;\r\n    if(!msg.sender.send(_amount)) throw;\r\n}\r\n\r\n    \r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"_contentCreator\",\"type\":\"address\"},{\"name\":\"_amountInWei\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_debitFrequency\",\"type\":\"uint256\"}],\"name\":\"newDebitObject\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_subscriber\",\"type\":\"address\"},{\"name\":\"_contentCreator\",\"type\":\"address\"}],\"name\":\"doDebit\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"debitObjects\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"contentCreator\",\"type\":\"address\"},{\"name\":\"amountInWei\",\"type\":\"uint256\"},{\"name\":\"debitFrequency\",\"type\":\"uint256\"},{\"name\":\"nextDebit\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"subscriptions\",\"outputs\":[{\"name\":\"subscriber\",\"type\":\"address\"},{\"name\":\"amountInWei\",\"type\":\"uint256\"},{\"name\":\"debitFrequency\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"debitObjectID\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"payable\":true,\"type\":\"fallback\"}]", "ContractName": "subscriptionDebitService", "CompilerVersion": "v0.4.6+commit.2dabbdf0", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}