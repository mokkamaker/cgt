{"status": "1", "message": "OK", "result": [{"SourceCode": "/**\r\n *  Faucet\r\n *\r\n *  This contract is designed to simplify the ownership of testnet\r\n *  funds. Anyone may send a request to this contract to send them\r\n *  pi ether. When done with your test ether, you may send any\r\n *  remaining funds back.\r\n *\r\n */\r\n\r\npragma solidity ^0.4.8;\r\n\r\ncontract Faucet {\r\n\r\n    event didFund(address targetAddress, uint remainingBalance);\r\n\r\n    bool _mutex = false;\r\n\r\n    uint _sendCount = 0;\r\n    uint _receiveCount = 0;\r\n\r\n    function Faucet() { }\r\n\r\n    function fund(address targetAddress) {\r\n        if (_mutex) { throw; }\r\n        _mutex = true;\r\n        _sendCount++;\r\n\r\n        // Send the target pi ether\r\n        bool success = targetAddress.send(0x2b992ddfa23249d6);\r\n        if (!success) { throw; }\r\n\r\n        // Reimburse the sender 0.1 ether (this should VERY cover gas)\r\n        success = msg.sender.send(0x16345785d8a0000);\r\n        if (!success) { throw; }\r\n\r\n        didFund(targetAddress, this.balance);\r\n\r\n        _mutex = false;\r\n    }\r\n\r\n    function() payable {\r\n        if (_mutex) { throw; }\r\n        _receiveCount++;\r\n    }\r\n\r\n    function getStatus() constant returns (uint sendCount, uint receiveCount) {\r\n        return (_sendCount, _receiveCount);\r\n    }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"targetAddress\",\"type\":\"address\"}],\"name\":\"fund\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStatus\",\"outputs\":[{\"name\":\"sendCount\",\"type\":\"uint256\"},{\"name\":\"receiveCount\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"targetAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"remainingBalance\",\"type\":\"uint256\"}],\"name\":\"didFund\",\"type\":\"event\"}]", "ContractName": "Faucet", "CompilerVersion": "v0.4.8+commit.60cc1668", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://bc37cb80ec9754bbd5efb6f6a1cf5cd376b02075cd97b50f646b17147d00cc53"}]}